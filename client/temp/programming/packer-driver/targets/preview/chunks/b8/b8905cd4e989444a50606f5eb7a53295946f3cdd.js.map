{"version":3,"sources":["file:///Users/even/workspace/github/pitaya_cocos_demo/client/assets/scripts/net/pitaya/Pitaya.ts"],"names":["PitayaWs","proto","Session","Pomelo","starx","window","protocol","Protocol","Init","host","port","handshakeBuffer","type","version","rsa","Promise","reslove","reject","_ws","WebSocket","reqId","binaryType","onclose","ev","console","log","onerror","onmessage","dispatch","msg","Package","TYPE_HANDSHAKE","data","JSON","parse","strdecode","body","code","RES_OLD_CLIENT","RES_OK","obj","encode","TYPE_HANDSHAKE_ACK","send","TYPE_HEARTBEAT","heartbeat","TYPE_DATA","onData","TYPE_KICK","onKick","msgs","decode","Array","isArray","i","length","onopen","handshakePkg","strencode","stringify","pkg","buffer","Call","route","CallAuth","reqByte","lobby","ReqAuth","Token","Account","token","finish","request","StartXCallAuth","init","error","e","resp","RespAuth","cb","sendMessage","callbacks","set","routeMap","encodeMsg","packet","Message","TYPE_REQUEST","TYPE_NOTIFY","Map","RES_FAIL"],"mappings":"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","sourcesContent":["import proto from \"../../../../proto_js/proto.js\";\nimport { Session } from \"../../logic/login/LoginModel.js\";\nimport { Pomelo } from \"./Pomelo\";\n\nconst starx = (window as any).starx\nconst protocol = (window as any).Protocol\n\n\nexport class PitayaWs {\n\n    private static _ws: WebSocket;\n    private static callbacks = new Map<number, Function>();\n    private static routeMap = new Map<number, string>();\n    private static reqId: number\n    private static RES_OK = 200;            \n    private static RES_FAIL = 500;\n    private static RES_OLD_CLIENT = 501;\n\n    public static async Init(host: string, port: number) {\n\n        let handshakeBuffer = {\n            'sys': {\n                type: \"pitaya_cocos\",\n                version: \"1.0.0\",\n                rsa: {}\n            },\n            'user': {}\n        };\n\n        return new Promise((reslove, reject) => {\n            this._ws = new WebSocket('ws://localhost:3250');\n            this.reqId = 0;\n            this._ws.binaryType = 'arraybuffer';\n            this._ws.onclose = (ev: Event) => {\n                console.log(\"websocket close\", ev)\n                reject(false)\n            };\n            this._ws.onerror = (ev: Event) => {\n                console.log(\"websocket err\", ev)\n                reject(false)\n            };\n            this._ws.onmessage = (ev: any) => {\n                let dispatch = (msg: { type: number, body?: Uint8Array }) => {\n                    switch (msg.type) {\n                        case Pomelo.Package.TYPE_HANDSHAKE:\n                            {\n\n                                let data = JSON.parse(protocol.strdecode(msg.body));\n                                console.log(\" handshake msg.code\", data.code)\n                                if (data.code === this.RES_OLD_CLIENT) {\n                                    return;\n                                }\n                                if (data.code !== this.RES_OK) {\n                                    return;\n                                }\n                                \n                                //一定要握手回应，不然服务器会断开\n                                let obj = protocol.Package.encode(protocol.Package.TYPE_HANDSHAKE_ACK);\n                                this.send(obj);\n\n                                //握手完，才能reslove\n                                reslove(true)\n                            }\n                            break\n                        case Pomelo.Package.TYPE_HEARTBEAT:\n                            this.heartbeat(msg.body)\n                            break\n                        case Pomelo.Package.TYPE_DATA:\n                            this.onData(msg.body as ArrayBuffer)\n                            break\n                        case Pomelo.Package.TYPE_KICK:\n                            this.onKick(msg.body)\n                            break\n                    }\n                }\n                let msgs = protocol.Package.decode(ev.data);\n                console.log(\"websocket onmessage\", msgs)\n                if (Array.isArray(msgs)) {\n                    for (let i = 0; i < msgs.length; i++) {\n                        let msg = msgs[i];\n                        dispatch(msg)\n                    }\n                } else {\n                    dispatch(msgs)\n                }\n\n                console.log(\"websocket on message ,reslove\")\n               \n            };\n\n            this._ws.onopen = (ev: Event) => {\n                let handshakePkg = protocol.strencode(JSON.stringify(handshakeBuffer))\n                var pkg = protocol.Package.encode(protocol.Package.TYPE_HANDSHAKE, handshakePkg);\n                this._ws.send(pkg.buffer);\n            };\n\n\n        })\n    }\n\n    \n   \n\n    private static heartbeat(data?: ArrayBuffer) {\n\n\n    }\n\n    private static onKick(data?: ArrayBuffer) {\n\n\n    }\n\n    private static onData(data: ArrayBuffer) {\n        // const msg = Pomelo.Message.decode(data);\n        // if (msg.route == \"Connector.Handler.CallAuth\") {\n        //     let resp = proto.lobby.RespAuth.decode(msg.body)\n        //     console.log(\"Connector.Handler.CallAuth, resp=\", resp)\n        // }\n    }\n\n\n    public static Call(route: string, data: any) {\n        // console.log(\" pitaya call\")\n        // this.reqId++;\n        // let msg = protocol.Message.encode(this.reqId, Pomelo.Message.TYPE_REQUEST, 0, route, data);\n        // let pkg = protocol.Package.encode(Pomelo.Package.TYPE_DATA, msg)\n        // // let msg = Pomelo.Message.encode(this._reqId, Pomelo.Message.TYPE_REQUEST, 0, route, data);\n        // // let pkg = Pomelo.Package.encode(Pomelo.Package.TYPE_DATA, msg)\n        // this._ws.send(pkg.buffer);\n        // this.testStartX()\n    }\n\n    public static CallAuth() {\n        let reqByte = proto.lobby.ReqAuth.encode({ Token: Session.Account.token }).finish()\n        this.request(\"Connector.Handler.CallAuth\", reqByte, () => { })\n    }\n\n\n    public static StartXCallAuth() {\n        starx.init(\n            {\n                host: \"localhost\",//Session.WsUrl.Host,\n                port: 3250,//Session.WsUrl.Port\n            },\n            () => {\n                let token = \"aa\"\n                console.log(\"startx token \", token)\n                let reqByte = proto.lobby.ReqAuth.encode({ Token: token }).finish();\n                console.error(\"startx 2-1 2-1 2-1 \", reqByte);\n                starx.request(\"Connector.Handler.CallAuth\", reqByte, (e: any) => {\n                    let resp = proto.lobby.RespAuth.decode(e);\n                    console.log(\" Connector.Handler.CallAuth, success resp= \", resp);\n                });\n            })\n    }\n\n\n    private static request(route: string, msg: any, cb: Function) {\n        if (!route) {\n            return;\n        }\n\n        this.reqId++;\n\n        console.error(\"pitaya reqid\", this.reqId);\n\n        this.sendMessage(this.reqId, route, msg);\n        this.callbacks.set(this.reqId, cb);\n        this.routeMap.set(this.reqId, route);\n    };\n\n    private static sendMessage(reqId: number, route: string, msg: any) {\n        var encodeMsg = this.encode(reqId, route, msg);\n        console.log(\" pitaya  1-2 1-2 1-2     msg \", encodeMsg)\n        var packet = protocol.Package.encode(protocol.Package.TYPE_DATA, encodeMsg);\n        console.log(\" pitaya  1-3 1-3 1-3     packet \", packet)\n        this.send(packet);\n    };\n\n    private static send(packet: any) {\n        this._ws.send(packet);\n    };\n\n    private static encode(reqId: number, route: string, msg: any) {\n        var type = reqId ? protocol.Message.TYPE_REQUEST : protocol.Message.TYPE_NOTIFY;\n        return protocol.Message.encode(reqId, type, 0, route, msg);\n    }\n}\n\n"]}