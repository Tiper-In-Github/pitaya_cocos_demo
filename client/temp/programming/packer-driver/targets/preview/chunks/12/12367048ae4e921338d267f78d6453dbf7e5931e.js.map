{"version":3,"sources":["file:///Users/even/workspace/github/yilinershi/pitaya_cocos_demo/client/proto_js/proto.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","chat","ChatGroup","valuesById","values","Object","create","InputChatInfo","properties","keys","i","length","prototype","Channel","Content","encode","message","writer","hasOwnProperty","call","uint32","int32","string","encodeDelimited","ldelim","decode","reader","end","undefined","len","pos","tag","skipType","decodeDelimited","verify","isString","fromObject","object","String","toObject","options","defaults","enums","toJSON","constructor","toJSONOptions","ChatInfo","From","common","PlayerBaseInfo","fork","error","TypeError","SyncChatInfo","Group","ErrorCode","Gender","PackSystem","Guid","NickName","Avatar","http","ReqEntry","Secret","UUID","Platform","Env","ResVersion","GameVersion","EnumPlatform","EnumEnv","RespEntry","ErrCode","LoginUrl","RegisterUrl","TcpUrl","WebSocketUrl","Addr","Host","Port","isInteger","ReqRegister","Account","Password","AppId","ChannelId","MacId","RespRegister","ReqLogin","RespLogin","Token","lobby","ReqAuth","RespAuth","BaseInfo","ReqLobbyInfo","RespLobbyInfo","Infos","emptyArray","LobbyInfo","push","Array","isArray","arrays","j","GameId","GameName","IsOpen","bool","Boolean","ReqChangePlayerInfo","RespChangePlayerInfo","rpc","ReqJoinChatGroup","Tag","Player","RespJoinChatGroup","ReqLeaveChatGroup","PlayerGuid","RespLeaveChatGroup","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'protobufjs/minimal.js';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n \"use strict\";\n\n var $protobuf = require(\"protobufjs/minimal.js\");\n\n // Common aliases\n var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n // Exported root namespace\n var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n $root.chat = (function() {\n\n     /**\n      * Namespace chat.\n      * @exports chat\n      * @namespace\n      */\n     var chat = {};\n\n     /**\n      * ChatGroup enum.\n      * @name chat.ChatGroup\n      * @enum {number}\n      * @property {number} World=0 World value\n      * @property {number} Club=1 Club value\n      */\n     chat.ChatGroup = (function() {\n         var valuesById = {}, values = Object.create(valuesById);\n         values[valuesById[0] = \"World\"] = 0;\n         values[valuesById[1] = \"Club\"] = 1;\n         return values;\n     })();\n\n     chat.InputChatInfo = (function() {\n\n         /**\n          * Properties of an InputChatInfo.\n          * @memberof chat\n          * @interface IInputChatInfo\n          * @property {chat.ChatGroup|null} [Channel] InputChatInfo Channel\n          * @property {string|null} [Content] InputChatInfo Content\n          */\n\n         /**\n          * Constructs a new InputChatInfo.\n          * @memberof chat\n          * @classdesc Represents an InputChatInfo.\n          * @implements IInputChatInfo\n          * @constructor\n          * @param {chat.IInputChatInfo=} [properties] Properties to set\n          */\n         function InputChatInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * InputChatInfo Channel.\n          * @member {chat.ChatGroup} Channel\n          * @memberof chat.InputChatInfo\n          * @instance\n          */\n         InputChatInfo.prototype.Channel = 0;\n\n         /**\n          * InputChatInfo Content.\n          * @member {string} Content\n          * @memberof chat.InputChatInfo\n          * @instance\n          */\n         InputChatInfo.prototype.Content = \"\";\n\n         /**\n          * Creates a new InputChatInfo instance using the specified properties.\n          * @function create\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {chat.IInputChatInfo=} [properties] Properties to set\n          * @returns {chat.InputChatInfo} InputChatInfo instance\n          */\n         InputChatInfo.create = function create(properties) {\n             return new InputChatInfo(properties);\n         };\n\n         /**\n          * Encodes the specified InputChatInfo message. Does not implicitly {@link chat.InputChatInfo.verify|verify} messages.\n          * @function encode\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {chat.IInputChatInfo} message InputChatInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         InputChatInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Channel != null && Object.hasOwnProperty.call(message, \"Channel\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.Channel);\n             if (message.Content != null && Object.hasOwnProperty.call(message, \"Content\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.Content);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified InputChatInfo message, length delimited. Does not implicitly {@link chat.InputChatInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {chat.IInputChatInfo} message InputChatInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         InputChatInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes an InputChatInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {chat.InputChatInfo} InputChatInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         InputChatInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.chat.InputChatInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Channel = reader.int32();\n                     break;\n                 case 2:\n                     message.Content = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes an InputChatInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {chat.InputChatInfo} InputChatInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         InputChatInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies an InputChatInfo message.\n          * @function verify\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         InputChatInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Channel != null && message.hasOwnProperty(\"Channel\"))\n                 switch (message.Channel) {\n                 default:\n                     return \"Channel: enum value expected\";\n                 case 0:\n                 case 1:\n                     break;\n                 }\n             if (message.Content != null && message.hasOwnProperty(\"Content\"))\n                 if (!$util.isString(message.Content))\n                     return \"Content: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates an InputChatInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {chat.InputChatInfo} InputChatInfo\n          */\n         InputChatInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.chat.InputChatInfo)\n                 return object;\n             var message = new $root.chat.InputChatInfo();\n             switch (object.Channel) {\n             case \"World\":\n             case 0:\n                 message.Channel = 0;\n                 break;\n             case \"Club\":\n             case 1:\n                 message.Channel = 1;\n                 break;\n             }\n             if (object.Content != null)\n                 message.Content = String(object.Content);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from an InputChatInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof chat.InputChatInfo\n          * @static\n          * @param {chat.InputChatInfo} message InputChatInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         InputChatInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Channel = options.enums === String ? \"World\" : 0;\n                 object.Content = \"\";\n             }\n             if (message.Channel != null && message.hasOwnProperty(\"Channel\"))\n                 object.Channel = options.enums === String ? $root.chat.ChatGroup[message.Channel] : message.Channel;\n             if (message.Content != null && message.hasOwnProperty(\"Content\"))\n                 object.Content = message.Content;\n             return object;\n         };\n\n         /**\n          * Converts this InputChatInfo to JSON.\n          * @function toJSON\n          * @memberof chat.InputChatInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         InputChatInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return InputChatInfo;\n     })();\n\n     chat.ChatInfo = (function() {\n\n         /**\n          * Properties of a ChatInfo.\n          * @memberof chat\n          * @interface IChatInfo\n          * @property {common.IPlayerBaseInfo|null} [From] ChatInfo From\n          * @property {string|null} [Content] ChatInfo Content\n          */\n\n         /**\n          * Constructs a new ChatInfo.\n          * @memberof chat\n          * @classdesc Represents a ChatInfo.\n          * @implements IChatInfo\n          * @constructor\n          * @param {chat.IChatInfo=} [properties] Properties to set\n          */\n         function ChatInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ChatInfo From.\n          * @member {common.IPlayerBaseInfo|null|undefined} From\n          * @memberof chat.ChatInfo\n          * @instance\n          */\n         ChatInfo.prototype.From = null;\n\n         /**\n          * ChatInfo Content.\n          * @member {string} Content\n          * @memberof chat.ChatInfo\n          * @instance\n          */\n         ChatInfo.prototype.Content = \"\";\n\n         /**\n          * Creates a new ChatInfo instance using the specified properties.\n          * @function create\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {chat.IChatInfo=} [properties] Properties to set\n          * @returns {chat.ChatInfo} ChatInfo instance\n          */\n         ChatInfo.create = function create(properties) {\n             return new ChatInfo(properties);\n         };\n\n         /**\n          * Encodes the specified ChatInfo message. Does not implicitly {@link chat.ChatInfo.verify|verify} messages.\n          * @function encode\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {chat.IChatInfo} message ChatInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ChatInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.From != null && Object.hasOwnProperty.call(message, \"From\"))\n                 $root.common.PlayerBaseInfo.encode(message.From, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n             if (message.Content != null && Object.hasOwnProperty.call(message, \"Content\"))\n                 writer.uint32(/* id 3, wireType 2 =*/26).string(message.Content);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ChatInfo message, length delimited. Does not implicitly {@link chat.ChatInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {chat.IChatInfo} message ChatInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ChatInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ChatInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {chat.ChatInfo} ChatInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ChatInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.chat.ChatInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.From = $root.common.PlayerBaseInfo.decode(reader, reader.uint32());\n                     break;\n                 case 3:\n                     message.Content = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ChatInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {chat.ChatInfo} ChatInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ChatInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ChatInfo message.\n          * @function verify\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ChatInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.From != null && message.hasOwnProperty(\"From\")) {\n                 var error = $root.common.PlayerBaseInfo.verify(message.From);\n                 if (error)\n                     return \"From.\" + error;\n             }\n             if (message.Content != null && message.hasOwnProperty(\"Content\"))\n                 if (!$util.isString(message.Content))\n                     return \"Content: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ChatInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {chat.ChatInfo} ChatInfo\n          */\n         ChatInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.chat.ChatInfo)\n                 return object;\n             var message = new $root.chat.ChatInfo();\n             if (object.From != null) {\n                 if (typeof object.From !== \"object\")\n                     throw TypeError(\".chat.ChatInfo.From: object expected\");\n                 message.From = $root.common.PlayerBaseInfo.fromObject(object.From);\n             }\n             if (object.Content != null)\n                 message.Content = String(object.Content);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ChatInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof chat.ChatInfo\n          * @static\n          * @param {chat.ChatInfo} message ChatInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ChatInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.From = null;\n                 object.Content = \"\";\n             }\n             if (message.From != null && message.hasOwnProperty(\"From\"))\n                 object.From = $root.common.PlayerBaseInfo.toObject(message.From, options);\n             if (message.Content != null && message.hasOwnProperty(\"Content\"))\n                 object.Content = message.Content;\n             return object;\n         };\n\n         /**\n          * Converts this ChatInfo to JSON.\n          * @function toJSON\n          * @memberof chat.ChatInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ChatInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ChatInfo;\n     })();\n\n     chat.SyncChatInfo = (function() {\n\n         /**\n          * Properties of a SyncChatInfo.\n          * @memberof chat\n          * @interface ISyncChatInfo\n          * @property {chat.ChatGroup|null} [Group] SyncChatInfo Group\n          * @property {chat.IChatInfo|null} [ChatInfo] SyncChatInfo ChatInfo\n          */\n\n         /**\n          * Constructs a new SyncChatInfo.\n          * @memberof chat\n          * @classdesc Represents a SyncChatInfo.\n          * @implements ISyncChatInfo\n          * @constructor\n          * @param {chat.ISyncChatInfo=} [properties] Properties to set\n          */\n         function SyncChatInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * SyncChatInfo Group.\n          * @member {chat.ChatGroup} Group\n          * @memberof chat.SyncChatInfo\n          * @instance\n          */\n         SyncChatInfo.prototype.Group = 0;\n\n         /**\n          * SyncChatInfo ChatInfo.\n          * @member {chat.IChatInfo|null|undefined} ChatInfo\n          * @memberof chat.SyncChatInfo\n          * @instance\n          */\n         SyncChatInfo.prototype.ChatInfo = null;\n\n         /**\n          * Creates a new SyncChatInfo instance using the specified properties.\n          * @function create\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {chat.ISyncChatInfo=} [properties] Properties to set\n          * @returns {chat.SyncChatInfo} SyncChatInfo instance\n          */\n         SyncChatInfo.create = function create(properties) {\n             return new SyncChatInfo(properties);\n         };\n\n         /**\n          * Encodes the specified SyncChatInfo message. Does not implicitly {@link chat.SyncChatInfo.verify|verify} messages.\n          * @function encode\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {chat.ISyncChatInfo} message SyncChatInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         SyncChatInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Group != null && Object.hasOwnProperty.call(message, \"Group\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.Group);\n             if (message.ChatInfo != null && Object.hasOwnProperty.call(message, \"ChatInfo\"))\n                 $root.chat.ChatInfo.encode(message.ChatInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n             return writer;\n         };\n\n         /**\n          * Encodes the specified SyncChatInfo message, length delimited. Does not implicitly {@link chat.SyncChatInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {chat.ISyncChatInfo} message SyncChatInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         SyncChatInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a SyncChatInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {chat.SyncChatInfo} SyncChatInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         SyncChatInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.chat.SyncChatInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Group = reader.int32();\n                     break;\n                 case 2:\n                     message.ChatInfo = $root.chat.ChatInfo.decode(reader, reader.uint32());\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a SyncChatInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {chat.SyncChatInfo} SyncChatInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         SyncChatInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a SyncChatInfo message.\n          * @function verify\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         SyncChatInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Group != null && message.hasOwnProperty(\"Group\"))\n                 switch (message.Group) {\n                 default:\n                     return \"Group: enum value expected\";\n                 case 0:\n                 case 1:\n                     break;\n                 }\n             if (message.ChatInfo != null && message.hasOwnProperty(\"ChatInfo\")) {\n                 var error = $root.chat.ChatInfo.verify(message.ChatInfo);\n                 if (error)\n                     return \"ChatInfo.\" + error;\n             }\n             return null;\n         };\n\n         /**\n          * Creates a SyncChatInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {chat.SyncChatInfo} SyncChatInfo\n          */\n         SyncChatInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.chat.SyncChatInfo)\n                 return object;\n             var message = new $root.chat.SyncChatInfo();\n             switch (object.Group) {\n             case \"World\":\n             case 0:\n                 message.Group = 0;\n                 break;\n             case \"Club\":\n             case 1:\n                 message.Group = 1;\n                 break;\n             }\n             if (object.ChatInfo != null) {\n                 if (typeof object.ChatInfo !== \"object\")\n                     throw TypeError(\".chat.SyncChatInfo.ChatInfo: object expected\");\n                 message.ChatInfo = $root.chat.ChatInfo.fromObject(object.ChatInfo);\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a SyncChatInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof chat.SyncChatInfo\n          * @static\n          * @param {chat.SyncChatInfo} message SyncChatInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         SyncChatInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Group = options.enums === String ? \"World\" : 0;\n                 object.ChatInfo = null;\n             }\n             if (message.Group != null && message.hasOwnProperty(\"Group\"))\n                 object.Group = options.enums === String ? $root.chat.ChatGroup[message.Group] : message.Group;\n             if (message.ChatInfo != null && message.hasOwnProperty(\"ChatInfo\"))\n                 object.ChatInfo = $root.chat.ChatInfo.toObject(message.ChatInfo, options);\n             return object;\n         };\n\n         /**\n          * Converts this SyncChatInfo to JSON.\n          * @function toJSON\n          * @memberof chat.SyncChatInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         SyncChatInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return SyncChatInfo;\n     })();\n\n     return chat;\n })();\n\n $root.common = (function() {\n\n     /**\n      * Namespace common.\n      * @exports common\n      * @namespace\n      */\n     var common = {};\n\n     /**\n      * ErrorCode enum.\n      * @name common.ErrorCode\n      * @enum {number}\n      * @property {number} Default=0 Default value\n      * @property {number} OK=1 OK value\n      * @property {number} EntryError=2 EntryError value\n      * @property {number} LoginAccountUnExistent=3 LoginAccountUnExistent value\n      * @property {number} LoginPasswordError=4 LoginPasswordError value\n      * @property {number} RegisterAccountExit=5 RegisterAccountExit value\n      * @property {number} AuthFailed=6 AuthFailed value\n      * @property {number} ChangePlayerInfoFailed=7 ChangePlayerInfoFailed value\n      */\n     common.ErrorCode = (function() {\n         var valuesById = {}, values = Object.create(valuesById);\n         values[valuesById[0] = \"Default\"] = 0;\n         values[valuesById[1] = \"OK\"] = 1;\n         values[valuesById[2] = \"EntryError\"] = 2;\n         values[valuesById[3] = \"LoginAccountUnExistent\"] = 3;\n         values[valuesById[4] = \"LoginPasswordError\"] = 4;\n         values[valuesById[5] = \"RegisterAccountExit\"] = 5;\n         values[valuesById[6] = \"AuthFailed\"] = 6;\n         values[valuesById[7] = \"ChangePlayerInfoFailed\"] = 7;\n         return values;\n     })();\n\n     /**\n      * Gender enum.\n      * @name common.Gender\n      * @enum {number}\n      * @property {number} Unknow=0 Unknow value\n      * @property {number} Male=1 Male value\n      * @property {number} Female=2 Female value\n      */\n     common.Gender = (function() {\n         var valuesById = {}, values = Object.create(valuesById);\n         values[valuesById[0] = \"Unknow\"] = 0;\n         values[valuesById[1] = \"Male\"] = 1;\n         values[valuesById[2] = \"Female\"] = 2;\n         return values;\n     })();\n\n     /**\n      * PackSystem enum.\n      * @name common.PackSystem\n      * @enum {number}\n      * @property {number} Web=0 Web value\n      * @property {number} Android=1 Android value\n      * @property {number} IOS=2 IOS value\n      * @property {number} Win=3 Win value\n      * @property {number} HongMeng=4 HongMeng value\n      */\n     common.PackSystem = (function() {\n         var valuesById = {}, values = Object.create(valuesById);\n         values[valuesById[0] = \"Web\"] = 0;\n         values[valuesById[1] = \"Android\"] = 1;\n         values[valuesById[2] = \"IOS\"] = 2;\n         values[valuesById[3] = \"Win\"] = 3;\n         values[valuesById[4] = \"HongMeng\"] = 4;\n         return values;\n     })();\n\n     common.PlayerBaseInfo = (function() {\n\n         /**\n          * Properties of a PlayerBaseInfo.\n          * @memberof common\n          * @interface IPlayerBaseInfo\n          * @property {string|null} [Guid] PlayerBaseInfo Guid\n          * @property {string|null} [NickName] PlayerBaseInfo NickName\n          * @property {common.Gender|null} [Gender] PlayerBaseInfo Gender\n          * @property {string|null} [Avatar] PlayerBaseInfo Avatar\n          */\n\n         /**\n          * Constructs a new PlayerBaseInfo.\n          * @memberof common\n          * @classdesc Represents a PlayerBaseInfo.\n          * @implements IPlayerBaseInfo\n          * @constructor\n          * @param {common.IPlayerBaseInfo=} [properties] Properties to set\n          */\n         function PlayerBaseInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * PlayerBaseInfo Guid.\n          * @member {string} Guid\n          * @memberof common.PlayerBaseInfo\n          * @instance\n          */\n         PlayerBaseInfo.prototype.Guid = \"\";\n\n         /**\n          * PlayerBaseInfo NickName.\n          * @member {string} NickName\n          * @memberof common.PlayerBaseInfo\n          * @instance\n          */\n         PlayerBaseInfo.prototype.NickName = \"\";\n\n         /**\n          * PlayerBaseInfo Gender.\n          * @member {common.Gender} Gender\n          * @memberof common.PlayerBaseInfo\n          * @instance\n          */\n         PlayerBaseInfo.prototype.Gender = 0;\n\n         /**\n          * PlayerBaseInfo Avatar.\n          * @member {string} Avatar\n          * @memberof common.PlayerBaseInfo\n          * @instance\n          */\n         PlayerBaseInfo.prototype.Avatar = \"\";\n\n         /**\n          * Creates a new PlayerBaseInfo instance using the specified properties.\n          * @function create\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {common.IPlayerBaseInfo=} [properties] Properties to set\n          * @returns {common.PlayerBaseInfo} PlayerBaseInfo instance\n          */\n         PlayerBaseInfo.create = function create(properties) {\n             return new PlayerBaseInfo(properties);\n         };\n\n         /**\n          * Encodes the specified PlayerBaseInfo message. Does not implicitly {@link common.PlayerBaseInfo.verify|verify} messages.\n          * @function encode\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {common.IPlayerBaseInfo} message PlayerBaseInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         PlayerBaseInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Guid != null && Object.hasOwnProperty.call(message, \"Guid\"))\n                 writer.uint32(/* id 1, wireType 2 =*/10).string(message.Guid);\n             if (message.NickName != null && Object.hasOwnProperty.call(message, \"NickName\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.NickName);\n             if (message.Gender != null && Object.hasOwnProperty.call(message, \"Gender\"))\n                 writer.uint32(/* id 3, wireType 0 =*/24).int32(message.Gender);\n             if (message.Avatar != null && Object.hasOwnProperty.call(message, \"Avatar\"))\n                 writer.uint32(/* id 4, wireType 2 =*/34).string(message.Avatar);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified PlayerBaseInfo message, length delimited. Does not implicitly {@link common.PlayerBaseInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {common.IPlayerBaseInfo} message PlayerBaseInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         PlayerBaseInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a PlayerBaseInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {common.PlayerBaseInfo} PlayerBaseInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         PlayerBaseInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.common.PlayerBaseInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Guid = reader.string();\n                     break;\n                 case 2:\n                     message.NickName = reader.string();\n                     break;\n                 case 3:\n                     message.Gender = reader.int32();\n                     break;\n                 case 4:\n                     message.Avatar = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a PlayerBaseInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {common.PlayerBaseInfo} PlayerBaseInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         PlayerBaseInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a PlayerBaseInfo message.\n          * @function verify\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         PlayerBaseInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Guid != null && message.hasOwnProperty(\"Guid\"))\n                 if (!$util.isString(message.Guid))\n                     return \"Guid: string expected\";\n             if (message.NickName != null && message.hasOwnProperty(\"NickName\"))\n                 if (!$util.isString(message.NickName))\n                     return \"NickName: string expected\";\n             if (message.Gender != null && message.hasOwnProperty(\"Gender\"))\n                 switch (message.Gender) {\n                 default:\n                     return \"Gender: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                     break;\n                 }\n             if (message.Avatar != null && message.hasOwnProperty(\"Avatar\"))\n                 if (!$util.isString(message.Avatar))\n                     return \"Avatar: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a PlayerBaseInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {common.PlayerBaseInfo} PlayerBaseInfo\n          */\n         PlayerBaseInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.common.PlayerBaseInfo)\n                 return object;\n             var message = new $root.common.PlayerBaseInfo();\n             if (object.Guid != null)\n                 message.Guid = String(object.Guid);\n             if (object.NickName != null)\n                 message.NickName = String(object.NickName);\n             switch (object.Gender) {\n             case \"Unknow\":\n             case 0:\n                 message.Gender = 0;\n                 break;\n             case \"Male\":\n             case 1:\n                 message.Gender = 1;\n                 break;\n             case \"Female\":\n             case 2:\n                 message.Gender = 2;\n                 break;\n             }\n             if (object.Avatar != null)\n                 message.Avatar = String(object.Avatar);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a PlayerBaseInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof common.PlayerBaseInfo\n          * @static\n          * @param {common.PlayerBaseInfo} message PlayerBaseInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         PlayerBaseInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Guid = \"\";\n                 object.NickName = \"\";\n                 object.Gender = options.enums === String ? \"Unknow\" : 0;\n                 object.Avatar = \"\";\n             }\n             if (message.Guid != null && message.hasOwnProperty(\"Guid\"))\n                 object.Guid = message.Guid;\n             if (message.NickName != null && message.hasOwnProperty(\"NickName\"))\n                 object.NickName = message.NickName;\n             if (message.Gender != null && message.hasOwnProperty(\"Gender\"))\n                 object.Gender = options.enums === String ? $root.common.Gender[message.Gender] : message.Gender;\n             if (message.Avatar != null && message.hasOwnProperty(\"Avatar\"))\n                 object.Avatar = message.Avatar;\n             return object;\n         };\n\n         /**\n          * Converts this PlayerBaseInfo to JSON.\n          * @function toJSON\n          * @memberof common.PlayerBaseInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         PlayerBaseInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return PlayerBaseInfo;\n     })();\n\n     return common;\n })();\n\n $root.http = (function() {\n\n     /**\n      * Namespace http.\n      * @exports http\n      * @namespace\n      */\n     var http = {};\n\n     http.ReqEntry = (function() {\n\n         /**\n          * Properties of a ReqEntry.\n          * @memberof http\n          * @interface IReqEntry\n          * @property {string|null} [Secret] ReqEntry Secret\n          * @property {string|null} [UUID] ReqEntry UUID\n          * @property {http.ReqEntry.EnumPlatform|null} [Platform] ReqEntry Platform\n          * @property {http.ReqEntry.EnumEnv|null} [Env] ReqEntry Env\n          * @property {string|null} [ResVersion] ReqEntry ResVersion\n          * @property {string|null} [GameVersion] ReqEntry GameVersion\n          */\n\n         /**\n          * Constructs a new ReqEntry.\n          * @memberof http\n          * @classdesc Represents a ReqEntry.\n          * @implements IReqEntry\n          * @constructor\n          * @param {http.IReqEntry=} [properties] Properties to set\n          */\n         function ReqEntry(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqEntry Secret.\n          * @member {string} Secret\n          * @memberof http.ReqEntry\n          * @instance\n          */\n         ReqEntry.prototype.Secret = \"\";\n\n         /**\n          * ReqEntry UUID.\n          * @member {string} UUID\n          * @memberof http.ReqEntry\n          * @instance\n          */\n         ReqEntry.prototype.UUID = \"\";\n\n         /**\n          * ReqEntry Platform.\n          * @member {http.ReqEntry.EnumPlatform} Platform\n          * @memberof http.ReqEntry\n          * @instance\n          */\n         ReqEntry.prototype.Platform = 0;\n\n         /**\n          * ReqEntry Env.\n          * @member {http.ReqEntry.EnumEnv} Env\n          * @memberof http.ReqEntry\n          * @instance\n          */\n         ReqEntry.prototype.Env = 0;\n\n         /**\n          * ReqEntry ResVersion.\n          * @member {string} ResVersion\n          * @memberof http.ReqEntry\n          * @instance\n          */\n         ReqEntry.prototype.ResVersion = \"\";\n\n         /**\n          * ReqEntry GameVersion.\n          * @member {string} GameVersion\n          * @memberof http.ReqEntry\n          * @instance\n          */\n         ReqEntry.prototype.GameVersion = \"\";\n\n         /**\n          * Creates a new ReqEntry instance using the specified properties.\n          * @function create\n          * @memberof http.ReqEntry\n          * @static\n          * @param {http.IReqEntry=} [properties] Properties to set\n          * @returns {http.ReqEntry} ReqEntry instance\n          */\n         ReqEntry.create = function create(properties) {\n             return new ReqEntry(properties);\n         };\n\n         /**\n          * Encodes the specified ReqEntry message. Does not implicitly {@link http.ReqEntry.verify|verify} messages.\n          * @function encode\n          * @memberof http.ReqEntry\n          * @static\n          * @param {http.IReqEntry} message ReqEntry message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqEntry.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Secret != null && Object.hasOwnProperty.call(message, \"Secret\"))\n                 writer.uint32(/* id 1, wireType 2 =*/10).string(message.Secret);\n             if (message.UUID != null && Object.hasOwnProperty.call(message, \"UUID\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.UUID);\n             if (message.Platform != null && Object.hasOwnProperty.call(message, \"Platform\"))\n                 writer.uint32(/* id 3, wireType 0 =*/24).int32(message.Platform);\n             if (message.Env != null && Object.hasOwnProperty.call(message, \"Env\"))\n                 writer.uint32(/* id 4, wireType 0 =*/32).int32(message.Env);\n             if (message.ResVersion != null && Object.hasOwnProperty.call(message, \"ResVersion\"))\n                 writer.uint32(/* id 5, wireType 2 =*/42).string(message.ResVersion);\n             if (message.GameVersion != null && Object.hasOwnProperty.call(message, \"GameVersion\"))\n                 writer.uint32(/* id 6, wireType 2 =*/50).string(message.GameVersion);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqEntry message, length delimited. Does not implicitly {@link http.ReqEntry.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof http.ReqEntry\n          * @static\n          * @param {http.IReqEntry} message ReqEntry message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqEntry.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqEntry message from the specified reader or buffer.\n          * @function decode\n          * @memberof http.ReqEntry\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {http.ReqEntry} ReqEntry\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqEntry.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.ReqEntry();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Secret = reader.string();\n                     break;\n                 case 2:\n                     message.UUID = reader.string();\n                     break;\n                 case 3:\n                     message.Platform = reader.int32();\n                     break;\n                 case 4:\n                     message.Env = reader.int32();\n                     break;\n                 case 5:\n                     message.ResVersion = reader.string();\n                     break;\n                 case 6:\n                     message.GameVersion = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqEntry message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof http.ReqEntry\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {http.ReqEntry} ReqEntry\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqEntry.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqEntry message.\n          * @function verify\n          * @memberof http.ReqEntry\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqEntry.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Secret != null && message.hasOwnProperty(\"Secret\"))\n                 if (!$util.isString(message.Secret))\n                     return \"Secret: string expected\";\n             if (message.UUID != null && message.hasOwnProperty(\"UUID\"))\n                 if (!$util.isString(message.UUID))\n                     return \"UUID: string expected\";\n             if (message.Platform != null && message.hasOwnProperty(\"Platform\"))\n                 switch (message.Platform) {\n                 default:\n                     return \"Platform: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                     break;\n                 }\n             if (message.Env != null && message.hasOwnProperty(\"Env\"))\n                 switch (message.Env) {\n                 default:\n                     return \"Env: enum value expected\";\n                 case 0:\n                 case 2:\n                 case 1:\n                     break;\n                 }\n             if (message.ResVersion != null && message.hasOwnProperty(\"ResVersion\"))\n                 if (!$util.isString(message.ResVersion))\n                     return \"ResVersion: string expected\";\n             if (message.GameVersion != null && message.hasOwnProperty(\"GameVersion\"))\n                 if (!$util.isString(message.GameVersion))\n                     return \"GameVersion: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqEntry message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof http.ReqEntry\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {http.ReqEntry} ReqEntry\n          */\n         ReqEntry.fromObject = function fromObject(object) {\n             if (object instanceof $root.http.ReqEntry)\n                 return object;\n             var message = new $root.http.ReqEntry();\n             if (object.Secret != null)\n                 message.Secret = String(object.Secret);\n             if (object.UUID != null)\n                 message.UUID = String(object.UUID);\n             switch (object.Platform) {\n             case \"None\":\n             case 0:\n                 message.Platform = 0;\n                 break;\n             case \"Android\":\n             case 1:\n                 message.Platform = 1;\n                 break;\n             case \"Ios\":\n             case 2:\n                 message.Platform = 2;\n                 break;\n             case \"WinPC\":\n             case 3:\n                 message.Platform = 3;\n                 break;\n             }\n             switch (object.Env) {\n             case \"Dev\":\n             case 0:\n                 message.Env = 0;\n                 break;\n             case \"Alpha\":\n             case 2:\n                 message.Env = 2;\n                 break;\n             case \"Office\":\n             case 1:\n                 message.Env = 1;\n                 break;\n             }\n             if (object.ResVersion != null)\n                 message.ResVersion = String(object.ResVersion);\n             if (object.GameVersion != null)\n                 message.GameVersion = String(object.GameVersion);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqEntry message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof http.ReqEntry\n          * @static\n          * @param {http.ReqEntry} message ReqEntry\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqEntry.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Secret = \"\";\n                 object.UUID = \"\";\n                 object.Platform = options.enums === String ? \"None\" : 0;\n                 object.Env = options.enums === String ? \"Dev\" : 0;\n                 object.ResVersion = \"\";\n                 object.GameVersion = \"\";\n             }\n             if (message.Secret != null && message.hasOwnProperty(\"Secret\"))\n                 object.Secret = message.Secret;\n             if (message.UUID != null && message.hasOwnProperty(\"UUID\"))\n                 object.UUID = message.UUID;\n             if (message.Platform != null && message.hasOwnProperty(\"Platform\"))\n                 object.Platform = options.enums === String ? $root.http.ReqEntry.EnumPlatform[message.Platform] : message.Platform;\n             if (message.Env != null && message.hasOwnProperty(\"Env\"))\n                 object.Env = options.enums === String ? $root.http.ReqEntry.EnumEnv[message.Env] : message.Env;\n             if (message.ResVersion != null && message.hasOwnProperty(\"ResVersion\"))\n                 object.ResVersion = message.ResVersion;\n             if (message.GameVersion != null && message.hasOwnProperty(\"GameVersion\"))\n                 object.GameVersion = message.GameVersion;\n             return object;\n         };\n\n         /**\n          * Converts this ReqEntry to JSON.\n          * @function toJSON\n          * @memberof http.ReqEntry\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqEntry.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         /**\n          * EnumPlatform enum.\n          * @name http.ReqEntry.EnumPlatform\n          * @enum {number}\n          * @property {number} None=0 None value\n          * @property {number} Android=1 Android value\n          * @property {number} Ios=2 Ios value\n          * @property {number} WinPC=3 WinPC value\n          */\n         ReqEntry.EnumPlatform = (function() {\n             var valuesById = {}, values = Object.create(valuesById);\n             values[valuesById[0] = \"None\"] = 0;\n             values[valuesById[1] = \"Android\"] = 1;\n             values[valuesById[2] = \"Ios\"] = 2;\n             values[valuesById[3] = \"WinPC\"] = 3;\n             return values;\n         })();\n\n         /**\n          * EnumEnv enum.\n          * @name http.ReqEntry.EnumEnv\n          * @enum {number}\n          * @property {number} Dev=0 Dev value\n          * @property {number} Alpha=2 Alpha value\n          * @property {number} Office=1 Office value\n          */\n         ReqEntry.EnumEnv = (function() {\n             var valuesById = {}, values = Object.create(valuesById);\n             values[valuesById[0] = \"Dev\"] = 0;\n             values[valuesById[2] = \"Alpha\"] = 2;\n             values[valuesById[1] = \"Office\"] = 1;\n             return values;\n         })();\n\n         return ReqEntry;\n     })();\n\n     http.RespEntry = (function() {\n\n         /**\n          * Properties of a RespEntry.\n          * @memberof http\n          * @interface IRespEntry\n          * @property {common.ErrorCode|null} [ErrCode] RespEntry ErrCode\n          * @property {string|null} [LoginUrl] RespEntry LoginUrl\n          * @property {string|null} [RegisterUrl] RespEntry RegisterUrl\n          * @property {http.RespEntry.IAddr|null} [TcpUrl] RespEntry TcpUrl\n          * @property {http.RespEntry.IAddr|null} [WebSocketUrl] RespEntry WebSocketUrl\n          */\n\n         /**\n          * Constructs a new RespEntry.\n          * @memberof http\n          * @classdesc Represents a RespEntry.\n          * @implements IRespEntry\n          * @constructor\n          * @param {http.IRespEntry=} [properties] Properties to set\n          */\n         function RespEntry(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespEntry ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof http.RespEntry\n          * @instance\n          */\n         RespEntry.prototype.ErrCode = 0;\n\n         /**\n          * RespEntry LoginUrl.\n          * @member {string} LoginUrl\n          * @memberof http.RespEntry\n          * @instance\n          */\n         RespEntry.prototype.LoginUrl = \"\";\n\n         /**\n          * RespEntry RegisterUrl.\n          * @member {string} RegisterUrl\n          * @memberof http.RespEntry\n          * @instance\n          */\n         RespEntry.prototype.RegisterUrl = \"\";\n\n         /**\n          * RespEntry TcpUrl.\n          * @member {http.RespEntry.IAddr|null|undefined} TcpUrl\n          * @memberof http.RespEntry\n          * @instance\n          */\n         RespEntry.prototype.TcpUrl = null;\n\n         /**\n          * RespEntry WebSocketUrl.\n          * @member {http.RespEntry.IAddr|null|undefined} WebSocketUrl\n          * @memberof http.RespEntry\n          * @instance\n          */\n         RespEntry.prototype.WebSocketUrl = null;\n\n         /**\n          * Creates a new RespEntry instance using the specified properties.\n          * @function create\n          * @memberof http.RespEntry\n          * @static\n          * @param {http.IRespEntry=} [properties] Properties to set\n          * @returns {http.RespEntry} RespEntry instance\n          */\n         RespEntry.create = function create(properties) {\n             return new RespEntry(properties);\n         };\n\n         /**\n          * Encodes the specified RespEntry message. Does not implicitly {@link http.RespEntry.verify|verify} messages.\n          * @function encode\n          * @memberof http.RespEntry\n          * @static\n          * @param {http.IRespEntry} message RespEntry message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespEntry.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             if (message.LoginUrl != null && Object.hasOwnProperty.call(message, \"LoginUrl\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.LoginUrl);\n             if (message.RegisterUrl != null && Object.hasOwnProperty.call(message, \"RegisterUrl\"))\n                 writer.uint32(/* id 3, wireType 2 =*/26).string(message.RegisterUrl);\n             if (message.TcpUrl != null && Object.hasOwnProperty.call(message, \"TcpUrl\"))\n                 $root.http.RespEntry.Addr.encode(message.TcpUrl, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n             if (message.WebSocketUrl != null && Object.hasOwnProperty.call(message, \"WebSocketUrl\"))\n                 $root.http.RespEntry.Addr.encode(message.WebSocketUrl, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespEntry message, length delimited. Does not implicitly {@link http.RespEntry.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof http.RespEntry\n          * @static\n          * @param {http.IRespEntry} message RespEntry message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespEntry.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespEntry message from the specified reader or buffer.\n          * @function decode\n          * @memberof http.RespEntry\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {http.RespEntry} RespEntry\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespEntry.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.RespEntry();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 case 2:\n                     message.LoginUrl = reader.string();\n                     break;\n                 case 3:\n                     message.RegisterUrl = reader.string();\n                     break;\n                 case 4:\n                     message.TcpUrl = $root.http.RespEntry.Addr.decode(reader, reader.uint32());\n                     break;\n                 case 5:\n                     message.WebSocketUrl = $root.http.RespEntry.Addr.decode(reader, reader.uint32());\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespEntry message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof http.RespEntry\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {http.RespEntry} RespEntry\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespEntry.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespEntry message.\n          * @function verify\n          * @memberof http.RespEntry\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespEntry.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             if (message.LoginUrl != null && message.hasOwnProperty(\"LoginUrl\"))\n                 if (!$util.isString(message.LoginUrl))\n                     return \"LoginUrl: string expected\";\n             if (message.RegisterUrl != null && message.hasOwnProperty(\"RegisterUrl\"))\n                 if (!$util.isString(message.RegisterUrl))\n                     return \"RegisterUrl: string expected\";\n             if (message.TcpUrl != null && message.hasOwnProperty(\"TcpUrl\")) {\n                 var error = $root.http.RespEntry.Addr.verify(message.TcpUrl);\n                 if (error)\n                     return \"TcpUrl.\" + error;\n             }\n             if (message.WebSocketUrl != null && message.hasOwnProperty(\"WebSocketUrl\")) {\n                 var error = $root.http.RespEntry.Addr.verify(message.WebSocketUrl);\n                 if (error)\n                     return \"WebSocketUrl.\" + error;\n             }\n             return null;\n         };\n\n         /**\n          * Creates a RespEntry message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof http.RespEntry\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {http.RespEntry} RespEntry\n          */\n         RespEntry.fromObject = function fromObject(object) {\n             if (object instanceof $root.http.RespEntry)\n                 return object;\n             var message = new $root.http.RespEntry();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             if (object.LoginUrl != null)\n                 message.LoginUrl = String(object.LoginUrl);\n             if (object.RegisterUrl != null)\n                 message.RegisterUrl = String(object.RegisterUrl);\n             if (object.TcpUrl != null) {\n                 if (typeof object.TcpUrl !== \"object\")\n                     throw TypeError(\".http.RespEntry.TcpUrl: object expected\");\n                 message.TcpUrl = $root.http.RespEntry.Addr.fromObject(object.TcpUrl);\n             }\n             if (object.WebSocketUrl != null) {\n                 if (typeof object.WebSocketUrl !== \"object\")\n                     throw TypeError(\".http.RespEntry.WebSocketUrl: object expected\");\n                 message.WebSocketUrl = $root.http.RespEntry.Addr.fromObject(object.WebSocketUrl);\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespEntry message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof http.RespEntry\n          * @static\n          * @param {http.RespEntry} message RespEntry\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespEntry.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n                 object.LoginUrl = \"\";\n                 object.RegisterUrl = \"\";\n                 object.TcpUrl = null;\n                 object.WebSocketUrl = null;\n             }\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             if (message.LoginUrl != null && message.hasOwnProperty(\"LoginUrl\"))\n                 object.LoginUrl = message.LoginUrl;\n             if (message.RegisterUrl != null && message.hasOwnProperty(\"RegisterUrl\"))\n                 object.RegisterUrl = message.RegisterUrl;\n             if (message.TcpUrl != null && message.hasOwnProperty(\"TcpUrl\"))\n                 object.TcpUrl = $root.http.RespEntry.Addr.toObject(message.TcpUrl, options);\n             if (message.WebSocketUrl != null && message.hasOwnProperty(\"WebSocketUrl\"))\n                 object.WebSocketUrl = $root.http.RespEntry.Addr.toObject(message.WebSocketUrl, options);\n             return object;\n         };\n\n         /**\n          * Converts this RespEntry to JSON.\n          * @function toJSON\n          * @memberof http.RespEntry\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespEntry.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         RespEntry.Addr = (function() {\n\n             /**\n              * Properties of an Addr.\n              * @memberof http.RespEntry\n              * @interface IAddr\n              * @property {string|null} [Host] Addr Host\n              * @property {number|null} [Port] Addr Port\n              */\n\n             /**\n              * Constructs a new Addr.\n              * @memberof http.RespEntry\n              * @classdesc Represents an Addr.\n              * @implements IAddr\n              * @constructor\n              * @param {http.RespEntry.IAddr=} [properties] Properties to set\n              */\n             function Addr(properties) {\n                 if (properties)\n                     for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                         if (properties[keys[i]] != null)\n                             this[keys[i]] = properties[keys[i]];\n             }\n\n             /**\n              * Addr Host.\n              * @member {string} Host\n              * @memberof http.RespEntry.Addr\n              * @instance\n              */\n             Addr.prototype.Host = \"\";\n\n             /**\n              * Addr Port.\n              * @member {number} Port\n              * @memberof http.RespEntry.Addr\n              * @instance\n              */\n             Addr.prototype.Port = 0;\n\n             /**\n              * Creates a new Addr instance using the specified properties.\n              * @function create\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {http.RespEntry.IAddr=} [properties] Properties to set\n              * @returns {http.RespEntry.Addr} Addr instance\n              */\n             Addr.create = function create(properties) {\n                 return new Addr(properties);\n             };\n\n             /**\n              * Encodes the specified Addr message. Does not implicitly {@link http.RespEntry.Addr.verify|verify} messages.\n              * @function encode\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {http.RespEntry.IAddr} message Addr message or plain object to encode\n              * @param {$protobuf.Writer} [writer] Writer to encode to\n              * @returns {$protobuf.Writer} Writer\n              */\n             Addr.encode = function encode(message, writer) {\n                 if (!writer)\n                     writer = $Writer.create();\n                 if (message.Host != null && Object.hasOwnProperty.call(message, \"Host\"))\n                     writer.uint32(/* id 1, wireType 2 =*/10).string(message.Host);\n                 if (message.Port != null && Object.hasOwnProperty.call(message, \"Port\"))\n                     writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Port);\n                 return writer;\n             };\n\n             /**\n              * Encodes the specified Addr message, length delimited. Does not implicitly {@link http.RespEntry.Addr.verify|verify} messages.\n              * @function encodeDelimited\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {http.RespEntry.IAddr} message Addr message or plain object to encode\n              * @param {$protobuf.Writer} [writer] Writer to encode to\n              * @returns {$protobuf.Writer} Writer\n              */\n             Addr.encodeDelimited = function encodeDelimited(message, writer) {\n                 return this.encode(message, writer).ldelim();\n             };\n\n             /**\n              * Decodes an Addr message from the specified reader or buffer.\n              * @function decode\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n              * @param {number} [length] Message length if known beforehand\n              * @returns {http.RespEntry.Addr} Addr\n              * @throws {Error} If the payload is not a reader or valid buffer\n              * @throws {$protobuf.util.ProtocolError} If required fields are missing\n              */\n             Addr.decode = function decode(reader, length) {\n                 if (!(reader instanceof $Reader))\n                     reader = $Reader.create(reader);\n                 var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.RespEntry.Addr();\n                 while (reader.pos < end) {\n                     var tag = reader.uint32();\n                     switch (tag >>> 3) {\n                     case 1:\n                         message.Host = reader.string();\n                         break;\n                     case 2:\n                         message.Port = reader.int32();\n                         break;\n                     default:\n                         reader.skipType(tag & 7);\n                         break;\n                     }\n                 }\n                 return message;\n             };\n\n             /**\n              * Decodes an Addr message from the specified reader or buffer, length delimited.\n              * @function decodeDelimited\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n              * @returns {http.RespEntry.Addr} Addr\n              * @throws {Error} If the payload is not a reader or valid buffer\n              * @throws {$protobuf.util.ProtocolError} If required fields are missing\n              */\n             Addr.decodeDelimited = function decodeDelimited(reader) {\n                 if (!(reader instanceof $Reader))\n                     reader = new $Reader(reader);\n                 return this.decode(reader, reader.uint32());\n             };\n\n             /**\n              * Verifies an Addr message.\n              * @function verify\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {Object.<string,*>} message Plain object to verify\n              * @returns {string|null} `null` if valid, otherwise the reason why it is not\n              */\n             Addr.verify = function verify(message) {\n                 if (typeof message !== \"object\" || message === null)\n                     return \"object expected\";\n                 if (message.Host != null && message.hasOwnProperty(\"Host\"))\n                     if (!$util.isString(message.Host))\n                         return \"Host: string expected\";\n                 if (message.Port != null && message.hasOwnProperty(\"Port\"))\n                     if (!$util.isInteger(message.Port))\n                         return \"Port: integer expected\";\n                 return null;\n             };\n\n             /**\n              * Creates an Addr message from a plain object. Also converts values to their respective internal types.\n              * @function fromObject\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {Object.<string,*>} object Plain object\n              * @returns {http.RespEntry.Addr} Addr\n              */\n             Addr.fromObject = function fromObject(object) {\n                 if (object instanceof $root.http.RespEntry.Addr)\n                     return object;\n                 var message = new $root.http.RespEntry.Addr();\n                 if (object.Host != null)\n                     message.Host = String(object.Host);\n                 if (object.Port != null)\n                     message.Port = object.Port | 0;\n                 return message;\n             };\n\n             /**\n              * Creates a plain object from an Addr message. Also converts values to other types if specified.\n              * @function toObject\n              * @memberof http.RespEntry.Addr\n              * @static\n              * @param {http.RespEntry.Addr} message Addr\n              * @param {$protobuf.IConversionOptions} [options] Conversion options\n              * @returns {Object.<string,*>} Plain object\n              */\n             Addr.toObject = function toObject(message, options) {\n                 if (!options)\n                     options = {};\n                 var object = {};\n                 if (options.defaults) {\n                     object.Host = \"\";\n                     object.Port = 0;\n                 }\n                 if (message.Host != null && message.hasOwnProperty(\"Host\"))\n                     object.Host = message.Host;\n                 if (message.Port != null && message.hasOwnProperty(\"Port\"))\n                     object.Port = message.Port;\n                 return object;\n             };\n\n             /**\n              * Converts this Addr to JSON.\n              * @function toJSON\n              * @memberof http.RespEntry.Addr\n              * @instance\n              * @returns {Object.<string,*>} JSON object\n              */\n             Addr.prototype.toJSON = function toJSON() {\n                 return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n             };\n\n             return Addr;\n         })();\n\n         return RespEntry;\n     })();\n\n     http.ReqRegister = (function() {\n\n         /**\n          * Properties of a ReqRegister.\n          * @memberof http\n          * @interface IReqRegister\n          * @property {string|null} [Account] ReqRegister Account\n          * @property {string|null} [Password] ReqRegister Password\n          * @property {string|null} [AppId] ReqRegister AppId\n          * @property {string|null} [ChannelId] ReqRegister ChannelId\n          * @property {string|null} [MacId] ReqRegister MacId\n          */\n\n         /**\n          * Constructs a new ReqRegister.\n          * @memberof http\n          * @classdesc Represents a ReqRegister.\n          * @implements IReqRegister\n          * @constructor\n          * @param {http.IReqRegister=} [properties] Properties to set\n          */\n         function ReqRegister(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqRegister Account.\n          * @member {string} Account\n          * @memberof http.ReqRegister\n          * @instance\n          */\n         ReqRegister.prototype.Account = \"\";\n\n         /**\n          * ReqRegister Password.\n          * @member {string} Password\n          * @memberof http.ReqRegister\n          * @instance\n          */\n         ReqRegister.prototype.Password = \"\";\n\n         /**\n          * ReqRegister AppId.\n          * @member {string} AppId\n          * @memberof http.ReqRegister\n          * @instance\n          */\n         ReqRegister.prototype.AppId = \"\";\n\n         /**\n          * ReqRegister ChannelId.\n          * @member {string} ChannelId\n          * @memberof http.ReqRegister\n          * @instance\n          */\n         ReqRegister.prototype.ChannelId = \"\";\n\n         /**\n          * ReqRegister MacId.\n          * @member {string} MacId\n          * @memberof http.ReqRegister\n          * @instance\n          */\n         ReqRegister.prototype.MacId = \"\";\n\n         /**\n          * Creates a new ReqRegister instance using the specified properties.\n          * @function create\n          * @memberof http.ReqRegister\n          * @static\n          * @param {http.IReqRegister=} [properties] Properties to set\n          * @returns {http.ReqRegister} ReqRegister instance\n          */\n         ReqRegister.create = function create(properties) {\n             return new ReqRegister(properties);\n         };\n\n         /**\n          * Encodes the specified ReqRegister message. Does not implicitly {@link http.ReqRegister.verify|verify} messages.\n          * @function encode\n          * @memberof http.ReqRegister\n          * @static\n          * @param {http.IReqRegister} message ReqRegister message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqRegister.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Account != null && Object.hasOwnProperty.call(message, \"Account\"))\n                 writer.uint32(/* id 1, wireType 2 =*/10).string(message.Account);\n             if (message.Password != null && Object.hasOwnProperty.call(message, \"Password\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.Password);\n             if (message.AppId != null && Object.hasOwnProperty.call(message, \"AppId\"))\n                 writer.uint32(/* id 3, wireType 2 =*/26).string(message.AppId);\n             if (message.ChannelId != null && Object.hasOwnProperty.call(message, \"ChannelId\"))\n                 writer.uint32(/* id 4, wireType 2 =*/34).string(message.ChannelId);\n             if (message.MacId != null && Object.hasOwnProperty.call(message, \"MacId\"))\n                 writer.uint32(/* id 5, wireType 2 =*/42).string(message.MacId);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqRegister message, length delimited. Does not implicitly {@link http.ReqRegister.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof http.ReqRegister\n          * @static\n          * @param {http.IReqRegister} message ReqRegister message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqRegister.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqRegister message from the specified reader or buffer.\n          * @function decode\n          * @memberof http.ReqRegister\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {http.ReqRegister} ReqRegister\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqRegister.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.ReqRegister();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Account = reader.string();\n                     break;\n                 case 2:\n                     message.Password = reader.string();\n                     break;\n                 case 3:\n                     message.AppId = reader.string();\n                     break;\n                 case 4:\n                     message.ChannelId = reader.string();\n                     break;\n                 case 5:\n                     message.MacId = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqRegister message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof http.ReqRegister\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {http.ReqRegister} ReqRegister\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqRegister.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqRegister message.\n          * @function verify\n          * @memberof http.ReqRegister\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqRegister.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                 if (!$util.isString(message.Account))\n                     return \"Account: string expected\";\n             if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                 if (!$util.isString(message.Password))\n                     return \"Password: string expected\";\n             if (message.AppId != null && message.hasOwnProperty(\"AppId\"))\n                 if (!$util.isString(message.AppId))\n                     return \"AppId: string expected\";\n             if (message.ChannelId != null && message.hasOwnProperty(\"ChannelId\"))\n                 if (!$util.isString(message.ChannelId))\n                     return \"ChannelId: string expected\";\n             if (message.MacId != null && message.hasOwnProperty(\"MacId\"))\n                 if (!$util.isString(message.MacId))\n                     return \"MacId: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqRegister message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof http.ReqRegister\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {http.ReqRegister} ReqRegister\n          */\n         ReqRegister.fromObject = function fromObject(object) {\n             if (object instanceof $root.http.ReqRegister)\n                 return object;\n             var message = new $root.http.ReqRegister();\n             if (object.Account != null)\n                 message.Account = String(object.Account);\n             if (object.Password != null)\n                 message.Password = String(object.Password);\n             if (object.AppId != null)\n                 message.AppId = String(object.AppId);\n             if (object.ChannelId != null)\n                 message.ChannelId = String(object.ChannelId);\n             if (object.MacId != null)\n                 message.MacId = String(object.MacId);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqRegister message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof http.ReqRegister\n          * @static\n          * @param {http.ReqRegister} message ReqRegister\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqRegister.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Account = \"\";\n                 object.Password = \"\";\n                 object.AppId = \"\";\n                 object.ChannelId = \"\";\n                 object.MacId = \"\";\n             }\n             if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                 object.Account = message.Account;\n             if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                 object.Password = message.Password;\n             if (message.AppId != null && message.hasOwnProperty(\"AppId\"))\n                 object.AppId = message.AppId;\n             if (message.ChannelId != null && message.hasOwnProperty(\"ChannelId\"))\n                 object.ChannelId = message.ChannelId;\n             if (message.MacId != null && message.hasOwnProperty(\"MacId\"))\n                 object.MacId = message.MacId;\n             return object;\n         };\n\n         /**\n          * Converts this ReqRegister to JSON.\n          * @function toJSON\n          * @memberof http.ReqRegister\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqRegister.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqRegister;\n     })();\n\n     http.RespRegister = (function() {\n\n         /**\n          * Properties of a RespRegister.\n          * @memberof http\n          * @interface IRespRegister\n          * @property {common.ErrorCode|null} [ErrCode] RespRegister ErrCode\n          */\n\n         /**\n          * Constructs a new RespRegister.\n          * @memberof http\n          * @classdesc Represents a RespRegister.\n          * @implements IRespRegister\n          * @constructor\n          * @param {http.IRespRegister=} [properties] Properties to set\n          */\n         function RespRegister(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespRegister ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof http.RespRegister\n          * @instance\n          */\n         RespRegister.prototype.ErrCode = 0;\n\n         /**\n          * Creates a new RespRegister instance using the specified properties.\n          * @function create\n          * @memberof http.RespRegister\n          * @static\n          * @param {http.IRespRegister=} [properties] Properties to set\n          * @returns {http.RespRegister} RespRegister instance\n          */\n         RespRegister.create = function create(properties) {\n             return new RespRegister(properties);\n         };\n\n         /**\n          * Encodes the specified RespRegister message. Does not implicitly {@link http.RespRegister.verify|verify} messages.\n          * @function encode\n          * @memberof http.RespRegister\n          * @static\n          * @param {http.IRespRegister} message RespRegister message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespRegister.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespRegister message, length delimited. Does not implicitly {@link http.RespRegister.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof http.RespRegister\n          * @static\n          * @param {http.IRespRegister} message RespRegister message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespRegister.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespRegister message from the specified reader or buffer.\n          * @function decode\n          * @memberof http.RespRegister\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {http.RespRegister} RespRegister\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespRegister.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.RespRegister();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespRegister message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof http.RespRegister\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {http.RespRegister} RespRegister\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespRegister.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespRegister message.\n          * @function verify\n          * @memberof http.RespRegister\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespRegister.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             return null;\n         };\n\n         /**\n          * Creates a RespRegister message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof http.RespRegister\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {http.RespRegister} RespRegister\n          */\n         RespRegister.fromObject = function fromObject(object) {\n             if (object instanceof $root.http.RespRegister)\n                 return object;\n             var message = new $root.http.RespRegister();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespRegister message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof http.RespRegister\n          * @static\n          * @param {http.RespRegister} message RespRegister\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespRegister.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults)\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             return object;\n         };\n\n         /**\n          * Converts this RespRegister to JSON.\n          * @function toJSON\n          * @memberof http.RespRegister\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespRegister.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return RespRegister;\n     })();\n\n     http.ReqLogin = (function() {\n\n         /**\n          * Properties of a ReqLogin.\n          * @memberof http\n          * @interface IReqLogin\n          * @property {string|null} [Account] ReqLogin Account\n          * @property {string|null} [Password] ReqLogin Password\n          * @property {string|null} [AppId] ReqLogin AppId\n          */\n\n         /**\n          * Constructs a new ReqLogin.\n          * @memberof http\n          * @classdesc Represents a ReqLogin.\n          * @implements IReqLogin\n          * @constructor\n          * @param {http.IReqLogin=} [properties] Properties to set\n          */\n         function ReqLogin(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqLogin Account.\n          * @member {string} Account\n          * @memberof http.ReqLogin\n          * @instance\n          */\n         ReqLogin.prototype.Account = \"\";\n\n         /**\n          * ReqLogin Password.\n          * @member {string} Password\n          * @memberof http.ReqLogin\n          * @instance\n          */\n         ReqLogin.prototype.Password = \"\";\n\n         /**\n          * ReqLogin AppId.\n          * @member {string} AppId\n          * @memberof http.ReqLogin\n          * @instance\n          */\n         ReqLogin.prototype.AppId = \"\";\n\n         /**\n          * Creates a new ReqLogin instance using the specified properties.\n          * @function create\n          * @memberof http.ReqLogin\n          * @static\n          * @param {http.IReqLogin=} [properties] Properties to set\n          * @returns {http.ReqLogin} ReqLogin instance\n          */\n         ReqLogin.create = function create(properties) {\n             return new ReqLogin(properties);\n         };\n\n         /**\n          * Encodes the specified ReqLogin message. Does not implicitly {@link http.ReqLogin.verify|verify} messages.\n          * @function encode\n          * @memberof http.ReqLogin\n          * @static\n          * @param {http.IReqLogin} message ReqLogin message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqLogin.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Account != null && Object.hasOwnProperty.call(message, \"Account\"))\n                 writer.uint32(/* id 1, wireType 2 =*/10).string(message.Account);\n             if (message.Password != null && Object.hasOwnProperty.call(message, \"Password\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.Password);\n             if (message.AppId != null && Object.hasOwnProperty.call(message, \"AppId\"))\n                 writer.uint32(/* id 3, wireType 2 =*/26).string(message.AppId);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqLogin message, length delimited. Does not implicitly {@link http.ReqLogin.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof http.ReqLogin\n          * @static\n          * @param {http.IReqLogin} message ReqLogin message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqLogin.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqLogin message from the specified reader or buffer.\n          * @function decode\n          * @memberof http.ReqLogin\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {http.ReqLogin} ReqLogin\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqLogin.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.ReqLogin();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Account = reader.string();\n                     break;\n                 case 2:\n                     message.Password = reader.string();\n                     break;\n                 case 3:\n                     message.AppId = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqLogin message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof http.ReqLogin\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {http.ReqLogin} ReqLogin\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqLogin.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqLogin message.\n          * @function verify\n          * @memberof http.ReqLogin\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqLogin.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                 if (!$util.isString(message.Account))\n                     return \"Account: string expected\";\n             if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                 if (!$util.isString(message.Password))\n                     return \"Password: string expected\";\n             if (message.AppId != null && message.hasOwnProperty(\"AppId\"))\n                 if (!$util.isString(message.AppId))\n                     return \"AppId: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqLogin message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof http.ReqLogin\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {http.ReqLogin} ReqLogin\n          */\n         ReqLogin.fromObject = function fromObject(object) {\n             if (object instanceof $root.http.ReqLogin)\n                 return object;\n             var message = new $root.http.ReqLogin();\n             if (object.Account != null)\n                 message.Account = String(object.Account);\n             if (object.Password != null)\n                 message.Password = String(object.Password);\n             if (object.AppId != null)\n                 message.AppId = String(object.AppId);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqLogin message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof http.ReqLogin\n          * @static\n          * @param {http.ReqLogin} message ReqLogin\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqLogin.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Account = \"\";\n                 object.Password = \"\";\n                 object.AppId = \"\";\n             }\n             if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                 object.Account = message.Account;\n             if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                 object.Password = message.Password;\n             if (message.AppId != null && message.hasOwnProperty(\"AppId\"))\n                 object.AppId = message.AppId;\n             return object;\n         };\n\n         /**\n          * Converts this ReqLogin to JSON.\n          * @function toJSON\n          * @memberof http.ReqLogin\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqLogin.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqLogin;\n     })();\n\n     http.RespLogin = (function() {\n\n         /**\n          * Properties of a RespLogin.\n          * @memberof http\n          * @interface IRespLogin\n          * @property {common.ErrorCode|null} [ErrCode] RespLogin ErrCode\n          * @property {string|null} [Token] RespLogin Token\n          */\n\n         /**\n          * Constructs a new RespLogin.\n          * @memberof http\n          * @classdesc Represents a RespLogin.\n          * @implements IRespLogin\n          * @constructor\n          * @param {http.IRespLogin=} [properties] Properties to set\n          */\n         function RespLogin(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespLogin ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof http.RespLogin\n          * @instance\n          */\n         RespLogin.prototype.ErrCode = 0;\n\n         /**\n          * RespLogin Token.\n          * @member {string} Token\n          * @memberof http.RespLogin\n          * @instance\n          */\n         RespLogin.prototype.Token = \"\";\n\n         /**\n          * Creates a new RespLogin instance using the specified properties.\n          * @function create\n          * @memberof http.RespLogin\n          * @static\n          * @param {http.IRespLogin=} [properties] Properties to set\n          * @returns {http.RespLogin} RespLogin instance\n          */\n         RespLogin.create = function create(properties) {\n             return new RespLogin(properties);\n         };\n\n         /**\n          * Encodes the specified RespLogin message. Does not implicitly {@link http.RespLogin.verify|verify} messages.\n          * @function encode\n          * @memberof http.RespLogin\n          * @static\n          * @param {http.IRespLogin} message RespLogin message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespLogin.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             if (message.Token != null && Object.hasOwnProperty.call(message, \"Token\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.Token);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespLogin message, length delimited. Does not implicitly {@link http.RespLogin.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof http.RespLogin\n          * @static\n          * @param {http.IRespLogin} message RespLogin message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespLogin.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespLogin message from the specified reader or buffer.\n          * @function decode\n          * @memberof http.RespLogin\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {http.RespLogin} RespLogin\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespLogin.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.http.RespLogin();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 case 2:\n                     message.Token = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespLogin message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof http.RespLogin\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {http.RespLogin} RespLogin\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespLogin.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespLogin message.\n          * @function verify\n          * @memberof http.RespLogin\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespLogin.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                 if (!$util.isString(message.Token))\n                     return \"Token: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a RespLogin message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof http.RespLogin\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {http.RespLogin} RespLogin\n          */\n         RespLogin.fromObject = function fromObject(object) {\n             if (object instanceof $root.http.RespLogin)\n                 return object;\n             var message = new $root.http.RespLogin();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             if (object.Token != null)\n                 message.Token = String(object.Token);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespLogin message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof http.RespLogin\n          * @static\n          * @param {http.RespLogin} message RespLogin\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespLogin.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n                 object.Token = \"\";\n             }\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                 object.Token = message.Token;\n             return object;\n         };\n\n         /**\n          * Converts this RespLogin to JSON.\n          * @function toJSON\n          * @memberof http.RespLogin\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespLogin.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return RespLogin;\n     })();\n\n     return http;\n })();\n\n $root.lobby = (function() {\n\n     /**\n      * Namespace lobby.\n      * @exports lobby\n      * @namespace\n      */\n     var lobby = {};\n\n     lobby.ReqAuth = (function() {\n\n         /**\n          * Properties of a ReqAuth.\n          * @memberof lobby\n          * @interface IReqAuth\n          * @property {string|null} [Token] ReqAuth Token\n          */\n\n         /**\n          * Constructs a new ReqAuth.\n          * @memberof lobby\n          * @classdesc Represents a ReqAuth.\n          * @implements IReqAuth\n          * @constructor\n          * @param {lobby.IReqAuth=} [properties] Properties to set\n          */\n         function ReqAuth(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqAuth Token.\n          * @member {string} Token\n          * @memberof lobby.ReqAuth\n          * @instance\n          */\n         ReqAuth.prototype.Token = \"\";\n\n         /**\n          * Creates a new ReqAuth instance using the specified properties.\n          * @function create\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {lobby.IReqAuth=} [properties] Properties to set\n          * @returns {lobby.ReqAuth} ReqAuth instance\n          */\n         ReqAuth.create = function create(properties) {\n             return new ReqAuth(properties);\n         };\n\n         /**\n          * Encodes the specified ReqAuth message. Does not implicitly {@link lobby.ReqAuth.verify|verify} messages.\n          * @function encode\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {lobby.IReqAuth} message ReqAuth message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqAuth.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Token != null && Object.hasOwnProperty.call(message, \"Token\"))\n                 writer.uint32(/* id 1, wireType 2 =*/10).string(message.Token);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqAuth message, length delimited. Does not implicitly {@link lobby.ReqAuth.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {lobby.IReqAuth} message ReqAuth message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqAuth.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqAuth message from the specified reader or buffer.\n          * @function decode\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {lobby.ReqAuth} ReqAuth\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqAuth.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.ReqAuth();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Token = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqAuth message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {lobby.ReqAuth} ReqAuth\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqAuth.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqAuth message.\n          * @function verify\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqAuth.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                 if (!$util.isString(message.Token))\n                     return \"Token: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqAuth message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {lobby.ReqAuth} ReqAuth\n          */\n         ReqAuth.fromObject = function fromObject(object) {\n             if (object instanceof $root.lobby.ReqAuth)\n                 return object;\n             var message = new $root.lobby.ReqAuth();\n             if (object.Token != null)\n                 message.Token = String(object.Token);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqAuth message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof lobby.ReqAuth\n          * @static\n          * @param {lobby.ReqAuth} message ReqAuth\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqAuth.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults)\n                 object.Token = \"\";\n             if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                 object.Token = message.Token;\n             return object;\n         };\n\n         /**\n          * Converts this ReqAuth to JSON.\n          * @function toJSON\n          * @memberof lobby.ReqAuth\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqAuth.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqAuth;\n     })();\n\n     lobby.RespAuth = (function() {\n\n         /**\n          * Properties of a RespAuth.\n          * @memberof lobby\n          * @interface IRespAuth\n          * @property {common.ErrorCode|null} [ErrCode] RespAuth ErrCode\n          * @property {common.IPlayerBaseInfo|null} [BaseInfo] RespAuth BaseInfo\n          */\n\n         /**\n          * Constructs a new RespAuth.\n          * @memberof lobby\n          * @classdesc Represents a RespAuth.\n          * @implements IRespAuth\n          * @constructor\n          * @param {lobby.IRespAuth=} [properties] Properties to set\n          */\n         function RespAuth(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespAuth ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof lobby.RespAuth\n          * @instance\n          */\n         RespAuth.prototype.ErrCode = 0;\n\n         /**\n          * RespAuth BaseInfo.\n          * @member {common.IPlayerBaseInfo|null|undefined} BaseInfo\n          * @memberof lobby.RespAuth\n          * @instance\n          */\n         RespAuth.prototype.BaseInfo = null;\n\n         /**\n          * Creates a new RespAuth instance using the specified properties.\n          * @function create\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {lobby.IRespAuth=} [properties] Properties to set\n          * @returns {lobby.RespAuth} RespAuth instance\n          */\n         RespAuth.create = function create(properties) {\n             return new RespAuth(properties);\n         };\n\n         /**\n          * Encodes the specified RespAuth message. Does not implicitly {@link lobby.RespAuth.verify|verify} messages.\n          * @function encode\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {lobby.IRespAuth} message RespAuth message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespAuth.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             if (message.BaseInfo != null && Object.hasOwnProperty.call(message, \"BaseInfo\"))\n                 $root.common.PlayerBaseInfo.encode(message.BaseInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespAuth message, length delimited. Does not implicitly {@link lobby.RespAuth.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {lobby.IRespAuth} message RespAuth message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespAuth.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespAuth message from the specified reader or buffer.\n          * @function decode\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {lobby.RespAuth} RespAuth\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespAuth.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.RespAuth();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 case 2:\n                     message.BaseInfo = $root.common.PlayerBaseInfo.decode(reader, reader.uint32());\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespAuth message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {lobby.RespAuth} RespAuth\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespAuth.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespAuth message.\n          * @function verify\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespAuth.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             if (message.BaseInfo != null && message.hasOwnProperty(\"BaseInfo\")) {\n                 var error = $root.common.PlayerBaseInfo.verify(message.BaseInfo);\n                 if (error)\n                     return \"BaseInfo.\" + error;\n             }\n             return null;\n         };\n\n         /**\n          * Creates a RespAuth message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {lobby.RespAuth} RespAuth\n          */\n         RespAuth.fromObject = function fromObject(object) {\n             if (object instanceof $root.lobby.RespAuth)\n                 return object;\n             var message = new $root.lobby.RespAuth();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             if (object.BaseInfo != null) {\n                 if (typeof object.BaseInfo !== \"object\")\n                     throw TypeError(\".lobby.RespAuth.BaseInfo: object expected\");\n                 message.BaseInfo = $root.common.PlayerBaseInfo.fromObject(object.BaseInfo);\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespAuth message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof lobby.RespAuth\n          * @static\n          * @param {lobby.RespAuth} message RespAuth\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespAuth.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n                 object.BaseInfo = null;\n             }\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             if (message.BaseInfo != null && message.hasOwnProperty(\"BaseInfo\"))\n                 object.BaseInfo = $root.common.PlayerBaseInfo.toObject(message.BaseInfo, options);\n             return object;\n         };\n\n         /**\n          * Converts this RespAuth to JSON.\n          * @function toJSON\n          * @memberof lobby.RespAuth\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespAuth.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return RespAuth;\n     })();\n\n     lobby.ReqLobbyInfo = (function() {\n\n         /**\n          * Properties of a ReqLobbyInfo.\n          * @memberof lobby\n          * @interface IReqLobbyInfo\n          */\n\n         /**\n          * Constructs a new ReqLobbyInfo.\n          * @memberof lobby\n          * @classdesc Represents a ReqLobbyInfo.\n          * @implements IReqLobbyInfo\n          * @constructor\n          * @param {lobby.IReqLobbyInfo=} [properties] Properties to set\n          */\n         function ReqLobbyInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * Creates a new ReqLobbyInfo instance using the specified properties.\n          * @function create\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {lobby.IReqLobbyInfo=} [properties] Properties to set\n          * @returns {lobby.ReqLobbyInfo} ReqLobbyInfo instance\n          */\n         ReqLobbyInfo.create = function create(properties) {\n             return new ReqLobbyInfo(properties);\n         };\n\n         /**\n          * Encodes the specified ReqLobbyInfo message. Does not implicitly {@link lobby.ReqLobbyInfo.verify|verify} messages.\n          * @function encode\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {lobby.IReqLobbyInfo} message ReqLobbyInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqLobbyInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqLobbyInfo message, length delimited. Does not implicitly {@link lobby.ReqLobbyInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {lobby.IReqLobbyInfo} message ReqLobbyInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqLobbyInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqLobbyInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {lobby.ReqLobbyInfo} ReqLobbyInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqLobbyInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.ReqLobbyInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqLobbyInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {lobby.ReqLobbyInfo} ReqLobbyInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqLobbyInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqLobbyInfo message.\n          * @function verify\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqLobbyInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqLobbyInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {lobby.ReqLobbyInfo} ReqLobbyInfo\n          */\n         ReqLobbyInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.lobby.ReqLobbyInfo)\n                 return object;\n             return new $root.lobby.ReqLobbyInfo();\n         };\n\n         /**\n          * Creates a plain object from a ReqLobbyInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof lobby.ReqLobbyInfo\n          * @static\n          * @param {lobby.ReqLobbyInfo} message ReqLobbyInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqLobbyInfo.toObject = function toObject() {\n             return {};\n         };\n\n         /**\n          * Converts this ReqLobbyInfo to JSON.\n          * @function toJSON\n          * @memberof lobby.ReqLobbyInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqLobbyInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqLobbyInfo;\n     })();\n\n     lobby.RespLobbyInfo = (function() {\n\n         /**\n          * Properties of a RespLobbyInfo.\n          * @memberof lobby\n          * @interface IRespLobbyInfo\n          * @property {Array.<lobby.RespLobbyInfo.ILobbyInfo>|null} [Infos] RespLobbyInfo Infos\n          */\n\n         /**\n          * Constructs a new RespLobbyInfo.\n          * @memberof lobby\n          * @classdesc Represents a RespLobbyInfo.\n          * @implements IRespLobbyInfo\n          * @constructor\n          * @param {lobby.IRespLobbyInfo=} [properties] Properties to set\n          */\n         function RespLobbyInfo(properties) {\n             this.Infos = [];\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespLobbyInfo Infos.\n          * @member {Array.<lobby.RespLobbyInfo.ILobbyInfo>} Infos\n          * @memberof lobby.RespLobbyInfo\n          * @instance\n          */\n         RespLobbyInfo.prototype.Infos = $util.emptyArray;\n\n         /**\n          * Creates a new RespLobbyInfo instance using the specified properties.\n          * @function create\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {lobby.IRespLobbyInfo=} [properties] Properties to set\n          * @returns {lobby.RespLobbyInfo} RespLobbyInfo instance\n          */\n         RespLobbyInfo.create = function create(properties) {\n             return new RespLobbyInfo(properties);\n         };\n\n         /**\n          * Encodes the specified RespLobbyInfo message. Does not implicitly {@link lobby.RespLobbyInfo.verify|verify} messages.\n          * @function encode\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {lobby.IRespLobbyInfo} message RespLobbyInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespLobbyInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Infos != null && message.Infos.length)\n                 for (var i = 0; i < message.Infos.length; ++i)\n                     $root.lobby.RespLobbyInfo.LobbyInfo.encode(message.Infos[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespLobbyInfo message, length delimited. Does not implicitly {@link lobby.RespLobbyInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {lobby.IRespLobbyInfo} message RespLobbyInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespLobbyInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespLobbyInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {lobby.RespLobbyInfo} RespLobbyInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespLobbyInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.RespLobbyInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     if (!(message.Infos && message.Infos.length))\n                         message.Infos = [];\n                     message.Infos.push($root.lobby.RespLobbyInfo.LobbyInfo.decode(reader, reader.uint32()));\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespLobbyInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {lobby.RespLobbyInfo} RespLobbyInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespLobbyInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespLobbyInfo message.\n          * @function verify\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespLobbyInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Infos != null && message.hasOwnProperty(\"Infos\")) {\n                 if (!Array.isArray(message.Infos))\n                     return \"Infos: array expected\";\n                 for (var i = 0; i < message.Infos.length; ++i) {\n                     var error = $root.lobby.RespLobbyInfo.LobbyInfo.verify(message.Infos[i]);\n                     if (error)\n                         return \"Infos.\" + error;\n                 }\n             }\n             return null;\n         };\n\n         /**\n          * Creates a RespLobbyInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {lobby.RespLobbyInfo} RespLobbyInfo\n          */\n         RespLobbyInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.lobby.RespLobbyInfo)\n                 return object;\n             var message = new $root.lobby.RespLobbyInfo();\n             if (object.Infos) {\n                 if (!Array.isArray(object.Infos))\n                     throw TypeError(\".lobby.RespLobbyInfo.Infos: array expected\");\n                 message.Infos = [];\n                 for (var i = 0; i < object.Infos.length; ++i) {\n                     if (typeof object.Infos[i] !== \"object\")\n                         throw TypeError(\".lobby.RespLobbyInfo.Infos: object expected\");\n                     message.Infos[i] = $root.lobby.RespLobbyInfo.LobbyInfo.fromObject(object.Infos[i]);\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespLobbyInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof lobby.RespLobbyInfo\n          * @static\n          * @param {lobby.RespLobbyInfo} message RespLobbyInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespLobbyInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.arrays || options.defaults)\n                 object.Infos = [];\n             if (message.Infos && message.Infos.length) {\n                 object.Infos = [];\n                 for (var j = 0; j < message.Infos.length; ++j)\n                     object.Infos[j] = $root.lobby.RespLobbyInfo.LobbyInfo.toObject(message.Infos[j], options);\n             }\n             return object;\n         };\n\n         /**\n          * Converts this RespLobbyInfo to JSON.\n          * @function toJSON\n          * @memberof lobby.RespLobbyInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespLobbyInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         RespLobbyInfo.LobbyInfo = (function() {\n\n             /**\n              * Properties of a LobbyInfo.\n              * @memberof lobby.RespLobbyInfo\n              * @interface ILobbyInfo\n              * @property {number|null} [GameId] LobbyInfo GameId\n              * @property {string|null} [GameName] LobbyInfo GameName\n              * @property {boolean|null} [IsOpen] LobbyInfo IsOpen\n              */\n\n             /**\n              * Constructs a new LobbyInfo.\n              * @memberof lobby.RespLobbyInfo\n              * @classdesc Represents a LobbyInfo.\n              * @implements ILobbyInfo\n              * @constructor\n              * @param {lobby.RespLobbyInfo.ILobbyInfo=} [properties] Properties to set\n              */\n             function LobbyInfo(properties) {\n                 if (properties)\n                     for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                         if (properties[keys[i]] != null)\n                             this[keys[i]] = properties[keys[i]];\n             }\n\n             /**\n              * LobbyInfo GameId.\n              * @member {number} GameId\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @instance\n              */\n             LobbyInfo.prototype.GameId = 0;\n\n             /**\n              * LobbyInfo GameName.\n              * @member {string} GameName\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @instance\n              */\n             LobbyInfo.prototype.GameName = \"\";\n\n             /**\n              * LobbyInfo IsOpen.\n              * @member {boolean} IsOpen\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @instance\n              */\n             LobbyInfo.prototype.IsOpen = false;\n\n             /**\n              * Creates a new LobbyInfo instance using the specified properties.\n              * @function create\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {lobby.RespLobbyInfo.ILobbyInfo=} [properties] Properties to set\n              * @returns {lobby.RespLobbyInfo.LobbyInfo} LobbyInfo instance\n              */\n             LobbyInfo.create = function create(properties) {\n                 return new LobbyInfo(properties);\n             };\n\n             /**\n              * Encodes the specified LobbyInfo message. Does not implicitly {@link lobby.RespLobbyInfo.LobbyInfo.verify|verify} messages.\n              * @function encode\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {lobby.RespLobbyInfo.ILobbyInfo} message LobbyInfo message or plain object to encode\n              * @param {$protobuf.Writer} [writer] Writer to encode to\n              * @returns {$protobuf.Writer} Writer\n              */\n             LobbyInfo.encode = function encode(message, writer) {\n                 if (!writer)\n                     writer = $Writer.create();\n                 if (message.GameId != null && Object.hasOwnProperty.call(message, \"GameId\"))\n                     writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.GameId);\n                 if (message.GameName != null && Object.hasOwnProperty.call(message, \"GameName\"))\n                     writer.uint32(/* id 2, wireType 2 =*/18).string(message.GameName);\n                 if (message.IsOpen != null && Object.hasOwnProperty.call(message, \"IsOpen\"))\n                     writer.uint32(/* id 3, wireType 0 =*/24).bool(message.IsOpen);\n                 return writer;\n             };\n\n             /**\n              * Encodes the specified LobbyInfo message, length delimited. Does not implicitly {@link lobby.RespLobbyInfo.LobbyInfo.verify|verify} messages.\n              * @function encodeDelimited\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {lobby.RespLobbyInfo.ILobbyInfo} message LobbyInfo message or plain object to encode\n              * @param {$protobuf.Writer} [writer] Writer to encode to\n              * @returns {$protobuf.Writer} Writer\n              */\n             LobbyInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                 return this.encode(message, writer).ldelim();\n             };\n\n             /**\n              * Decodes a LobbyInfo message from the specified reader or buffer.\n              * @function decode\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n              * @param {number} [length] Message length if known beforehand\n              * @returns {lobby.RespLobbyInfo.LobbyInfo} LobbyInfo\n              * @throws {Error} If the payload is not a reader or valid buffer\n              * @throws {$protobuf.util.ProtocolError} If required fields are missing\n              */\n             LobbyInfo.decode = function decode(reader, length) {\n                 if (!(reader instanceof $Reader))\n                     reader = $Reader.create(reader);\n                 var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.RespLobbyInfo.LobbyInfo();\n                 while (reader.pos < end) {\n                     var tag = reader.uint32();\n                     switch (tag >>> 3) {\n                     case 1:\n                         message.GameId = reader.uint32();\n                         break;\n                     case 2:\n                         message.GameName = reader.string();\n                         break;\n                     case 3:\n                         message.IsOpen = reader.bool();\n                         break;\n                     default:\n                         reader.skipType(tag & 7);\n                         break;\n                     }\n                 }\n                 return message;\n             };\n\n             /**\n              * Decodes a LobbyInfo message from the specified reader or buffer, length delimited.\n              * @function decodeDelimited\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n              * @returns {lobby.RespLobbyInfo.LobbyInfo} LobbyInfo\n              * @throws {Error} If the payload is not a reader or valid buffer\n              * @throws {$protobuf.util.ProtocolError} If required fields are missing\n              */\n             LobbyInfo.decodeDelimited = function decodeDelimited(reader) {\n                 if (!(reader instanceof $Reader))\n                     reader = new $Reader(reader);\n                 return this.decode(reader, reader.uint32());\n             };\n\n             /**\n              * Verifies a LobbyInfo message.\n              * @function verify\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {Object.<string,*>} message Plain object to verify\n              * @returns {string|null} `null` if valid, otherwise the reason why it is not\n              */\n             LobbyInfo.verify = function verify(message) {\n                 if (typeof message !== \"object\" || message === null)\n                     return \"object expected\";\n                 if (message.GameId != null && message.hasOwnProperty(\"GameId\"))\n                     if (!$util.isInteger(message.GameId))\n                         return \"GameId: integer expected\";\n                 if (message.GameName != null && message.hasOwnProperty(\"GameName\"))\n                     if (!$util.isString(message.GameName))\n                         return \"GameName: string expected\";\n                 if (message.IsOpen != null && message.hasOwnProperty(\"IsOpen\"))\n                     if (typeof message.IsOpen !== \"boolean\")\n                         return \"IsOpen: boolean expected\";\n                 return null;\n             };\n\n             /**\n              * Creates a LobbyInfo message from a plain object. Also converts values to their respective internal types.\n              * @function fromObject\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {Object.<string,*>} object Plain object\n              * @returns {lobby.RespLobbyInfo.LobbyInfo} LobbyInfo\n              */\n             LobbyInfo.fromObject = function fromObject(object) {\n                 if (object instanceof $root.lobby.RespLobbyInfo.LobbyInfo)\n                     return object;\n                 var message = new $root.lobby.RespLobbyInfo.LobbyInfo();\n                 if (object.GameId != null)\n                     message.GameId = object.GameId >>> 0;\n                 if (object.GameName != null)\n                     message.GameName = String(object.GameName);\n                 if (object.IsOpen != null)\n                     message.IsOpen = Boolean(object.IsOpen);\n                 return message;\n             };\n\n             /**\n              * Creates a plain object from a LobbyInfo message. Also converts values to other types if specified.\n              * @function toObject\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @static\n              * @param {lobby.RespLobbyInfo.LobbyInfo} message LobbyInfo\n              * @param {$protobuf.IConversionOptions} [options] Conversion options\n              * @returns {Object.<string,*>} Plain object\n              */\n             LobbyInfo.toObject = function toObject(message, options) {\n                 if (!options)\n                     options = {};\n                 var object = {};\n                 if (options.defaults) {\n                     object.GameId = 0;\n                     object.GameName = \"\";\n                     object.IsOpen = false;\n                 }\n                 if (message.GameId != null && message.hasOwnProperty(\"GameId\"))\n                     object.GameId = message.GameId;\n                 if (message.GameName != null && message.hasOwnProperty(\"GameName\"))\n                     object.GameName = message.GameName;\n                 if (message.IsOpen != null && message.hasOwnProperty(\"IsOpen\"))\n                     object.IsOpen = message.IsOpen;\n                 return object;\n             };\n\n             /**\n              * Converts this LobbyInfo to JSON.\n              * @function toJSON\n              * @memberof lobby.RespLobbyInfo.LobbyInfo\n              * @instance\n              * @returns {Object.<string,*>} JSON object\n              */\n             LobbyInfo.prototype.toJSON = function toJSON() {\n                 return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n             };\n\n             return LobbyInfo;\n         })();\n\n         return RespLobbyInfo;\n     })();\n\n     lobby.ReqChangePlayerInfo = (function() {\n\n         /**\n          * Properties of a ReqChangePlayerInfo.\n          * @memberof lobby\n          * @interface IReqChangePlayerInfo\n          * @property {string|null} [NickName] ReqChangePlayerInfo NickName\n          * @property {common.Gender|null} [Gender] ReqChangePlayerInfo Gender\n          * @property {string|null} [Avatar] ReqChangePlayerInfo Avatar\n          */\n\n         /**\n          * Constructs a new ReqChangePlayerInfo.\n          * @memberof lobby\n          * @classdesc Represents a ReqChangePlayerInfo.\n          * @implements IReqChangePlayerInfo\n          * @constructor\n          * @param {lobby.IReqChangePlayerInfo=} [properties] Properties to set\n          */\n         function ReqChangePlayerInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqChangePlayerInfo NickName.\n          * @member {string} NickName\n          * @memberof lobby.ReqChangePlayerInfo\n          * @instance\n          */\n         ReqChangePlayerInfo.prototype.NickName = \"\";\n\n         /**\n          * ReqChangePlayerInfo Gender.\n          * @member {common.Gender} Gender\n          * @memberof lobby.ReqChangePlayerInfo\n          * @instance\n          */\n         ReqChangePlayerInfo.prototype.Gender = 0;\n\n         /**\n          * ReqChangePlayerInfo Avatar.\n          * @member {string} Avatar\n          * @memberof lobby.ReqChangePlayerInfo\n          * @instance\n          */\n         ReqChangePlayerInfo.prototype.Avatar = \"\";\n\n         /**\n          * Creates a new ReqChangePlayerInfo instance using the specified properties.\n          * @function create\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {lobby.IReqChangePlayerInfo=} [properties] Properties to set\n          * @returns {lobby.ReqChangePlayerInfo} ReqChangePlayerInfo instance\n          */\n         ReqChangePlayerInfo.create = function create(properties) {\n             return new ReqChangePlayerInfo(properties);\n         };\n\n         /**\n          * Encodes the specified ReqChangePlayerInfo message. Does not implicitly {@link lobby.ReqChangePlayerInfo.verify|verify} messages.\n          * @function encode\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {lobby.IReqChangePlayerInfo} message ReqChangePlayerInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqChangePlayerInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.NickName != null && Object.hasOwnProperty.call(message, \"NickName\"))\n                 writer.uint32(/* id 1, wireType 2 =*/10).string(message.NickName);\n             if (message.Gender != null && Object.hasOwnProperty.call(message, \"Gender\"))\n                 writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Gender);\n             if (message.Avatar != null && Object.hasOwnProperty.call(message, \"Avatar\"))\n                 writer.uint32(/* id 3, wireType 2 =*/26).string(message.Avatar);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqChangePlayerInfo message, length delimited. Does not implicitly {@link lobby.ReqChangePlayerInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {lobby.IReqChangePlayerInfo} message ReqChangePlayerInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqChangePlayerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqChangePlayerInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {lobby.ReqChangePlayerInfo} ReqChangePlayerInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqChangePlayerInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.ReqChangePlayerInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.NickName = reader.string();\n                     break;\n                 case 2:\n                     message.Gender = reader.int32();\n                     break;\n                 case 3:\n                     message.Avatar = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqChangePlayerInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {lobby.ReqChangePlayerInfo} ReqChangePlayerInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqChangePlayerInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqChangePlayerInfo message.\n          * @function verify\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqChangePlayerInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.NickName != null && message.hasOwnProperty(\"NickName\"))\n                 if (!$util.isString(message.NickName))\n                     return \"NickName: string expected\";\n             if (message.Gender != null && message.hasOwnProperty(\"Gender\"))\n                 switch (message.Gender) {\n                 default:\n                     return \"Gender: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                     break;\n                 }\n             if (message.Avatar != null && message.hasOwnProperty(\"Avatar\"))\n                 if (!$util.isString(message.Avatar))\n                     return \"Avatar: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqChangePlayerInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {lobby.ReqChangePlayerInfo} ReqChangePlayerInfo\n          */\n         ReqChangePlayerInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.lobby.ReqChangePlayerInfo)\n                 return object;\n             var message = new $root.lobby.ReqChangePlayerInfo();\n             if (object.NickName != null)\n                 message.NickName = String(object.NickName);\n             switch (object.Gender) {\n             case \"Unknow\":\n             case 0:\n                 message.Gender = 0;\n                 break;\n             case \"Male\":\n             case 1:\n                 message.Gender = 1;\n                 break;\n             case \"Female\":\n             case 2:\n                 message.Gender = 2;\n                 break;\n             }\n             if (object.Avatar != null)\n                 message.Avatar = String(object.Avatar);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqChangePlayerInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof lobby.ReqChangePlayerInfo\n          * @static\n          * @param {lobby.ReqChangePlayerInfo} message ReqChangePlayerInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqChangePlayerInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.NickName = \"\";\n                 object.Gender = options.enums === String ? \"Unknow\" : 0;\n                 object.Avatar = \"\";\n             }\n             if (message.NickName != null && message.hasOwnProperty(\"NickName\"))\n                 object.NickName = message.NickName;\n             if (message.Gender != null && message.hasOwnProperty(\"Gender\"))\n                 object.Gender = options.enums === String ? $root.common.Gender[message.Gender] : message.Gender;\n             if (message.Avatar != null && message.hasOwnProperty(\"Avatar\"))\n                 object.Avatar = message.Avatar;\n             return object;\n         };\n\n         /**\n          * Converts this ReqChangePlayerInfo to JSON.\n          * @function toJSON\n          * @memberof lobby.ReqChangePlayerInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqChangePlayerInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqChangePlayerInfo;\n     })();\n\n     lobby.RespChangePlayerInfo = (function() {\n\n         /**\n          * Properties of a RespChangePlayerInfo.\n          * @memberof lobby\n          * @interface IRespChangePlayerInfo\n          * @property {common.ErrorCode|null} [ErrCode] RespChangePlayerInfo ErrCode\n          */\n\n         /**\n          * Constructs a new RespChangePlayerInfo.\n          * @memberof lobby\n          * @classdesc Represents a RespChangePlayerInfo.\n          * @implements IRespChangePlayerInfo\n          * @constructor\n          * @param {lobby.IRespChangePlayerInfo=} [properties] Properties to set\n          */\n         function RespChangePlayerInfo(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespChangePlayerInfo ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof lobby.RespChangePlayerInfo\n          * @instance\n          */\n         RespChangePlayerInfo.prototype.ErrCode = 0;\n\n         /**\n          * Creates a new RespChangePlayerInfo instance using the specified properties.\n          * @function create\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {lobby.IRespChangePlayerInfo=} [properties] Properties to set\n          * @returns {lobby.RespChangePlayerInfo} RespChangePlayerInfo instance\n          */\n         RespChangePlayerInfo.create = function create(properties) {\n             return new RespChangePlayerInfo(properties);\n         };\n\n         /**\n          * Encodes the specified RespChangePlayerInfo message. Does not implicitly {@link lobby.RespChangePlayerInfo.verify|verify} messages.\n          * @function encode\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {lobby.IRespChangePlayerInfo} message RespChangePlayerInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespChangePlayerInfo.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespChangePlayerInfo message, length delimited. Does not implicitly {@link lobby.RespChangePlayerInfo.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {lobby.IRespChangePlayerInfo} message RespChangePlayerInfo message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespChangePlayerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespChangePlayerInfo message from the specified reader or buffer.\n          * @function decode\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {lobby.RespChangePlayerInfo} RespChangePlayerInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespChangePlayerInfo.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.lobby.RespChangePlayerInfo();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespChangePlayerInfo message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {lobby.RespChangePlayerInfo} RespChangePlayerInfo\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespChangePlayerInfo.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespChangePlayerInfo message.\n          * @function verify\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespChangePlayerInfo.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             return null;\n         };\n\n         /**\n          * Creates a RespChangePlayerInfo message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {lobby.RespChangePlayerInfo} RespChangePlayerInfo\n          */\n         RespChangePlayerInfo.fromObject = function fromObject(object) {\n             if (object instanceof $root.lobby.RespChangePlayerInfo)\n                 return object;\n             var message = new $root.lobby.RespChangePlayerInfo();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespChangePlayerInfo message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof lobby.RespChangePlayerInfo\n          * @static\n          * @param {lobby.RespChangePlayerInfo} message RespChangePlayerInfo\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespChangePlayerInfo.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults)\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             return object;\n         };\n\n         /**\n          * Converts this RespChangePlayerInfo to JSON.\n          * @function toJSON\n          * @memberof lobby.RespChangePlayerInfo\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespChangePlayerInfo.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return RespChangePlayerInfo;\n     })();\n\n     return lobby;\n })();\n\n $root.rpc = (function() {\n\n     /**\n      * Namespace rpc.\n      * @exports rpc\n      * @namespace\n      */\n     var rpc = {};\n\n     rpc.ReqJoinChatGroup = (function() {\n\n         /**\n          * Properties of a ReqJoinChatGroup.\n          * @memberof rpc\n          * @interface IReqJoinChatGroup\n          * @property {chat.ChatGroup|null} [Group] ReqJoinChatGroup Group\n          * @property {string|null} [Tag] ReqJoinChatGroup Tag\n          * @property {common.IPlayerBaseInfo|null} [Player] ReqJoinChatGroup Player\n          */\n\n         /**\n          * Constructs a new ReqJoinChatGroup.\n          * @memberof rpc\n          * @classdesc Represents a ReqJoinChatGroup.\n          * @implements IReqJoinChatGroup\n          * @constructor\n          * @param {rpc.IReqJoinChatGroup=} [properties] Properties to set\n          */\n         function ReqJoinChatGroup(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqJoinChatGroup Group.\n          * @member {chat.ChatGroup} Group\n          * @memberof rpc.ReqJoinChatGroup\n          * @instance\n          */\n         ReqJoinChatGroup.prototype.Group = 0;\n\n         /**\n          * ReqJoinChatGroup Tag.\n          * @member {string} Tag\n          * @memberof rpc.ReqJoinChatGroup\n          * @instance\n          */\n         ReqJoinChatGroup.prototype.Tag = \"\";\n\n         /**\n          * ReqJoinChatGroup Player.\n          * @member {common.IPlayerBaseInfo|null|undefined} Player\n          * @memberof rpc.ReqJoinChatGroup\n          * @instance\n          */\n         ReqJoinChatGroup.prototype.Player = null;\n\n         /**\n          * Creates a new ReqJoinChatGroup instance using the specified properties.\n          * @function create\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {rpc.IReqJoinChatGroup=} [properties] Properties to set\n          * @returns {rpc.ReqJoinChatGroup} ReqJoinChatGroup instance\n          */\n         ReqJoinChatGroup.create = function create(properties) {\n             return new ReqJoinChatGroup(properties);\n         };\n\n         /**\n          * Encodes the specified ReqJoinChatGroup message. Does not implicitly {@link rpc.ReqJoinChatGroup.verify|verify} messages.\n          * @function encode\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {rpc.IReqJoinChatGroup} message ReqJoinChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqJoinChatGroup.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Group != null && Object.hasOwnProperty.call(message, \"Group\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.Group);\n             if (message.Tag != null && Object.hasOwnProperty.call(message, \"Tag\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.Tag);\n             if (message.Player != null && Object.hasOwnProperty.call(message, \"Player\"))\n                 $root.common.PlayerBaseInfo.encode(message.Player, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqJoinChatGroup message, length delimited. Does not implicitly {@link rpc.ReqJoinChatGroup.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {rpc.IReqJoinChatGroup} message ReqJoinChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqJoinChatGroup.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqJoinChatGroup message from the specified reader or buffer.\n          * @function decode\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {rpc.ReqJoinChatGroup} ReqJoinChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqJoinChatGroup.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.rpc.ReqJoinChatGroup();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Group = reader.int32();\n                     break;\n                 case 2:\n                     message.Tag = reader.string();\n                     break;\n                 case 3:\n                     message.Player = $root.common.PlayerBaseInfo.decode(reader, reader.uint32());\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqJoinChatGroup message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {rpc.ReqJoinChatGroup} ReqJoinChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqJoinChatGroup.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqJoinChatGroup message.\n          * @function verify\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqJoinChatGroup.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Group != null && message.hasOwnProperty(\"Group\"))\n                 switch (message.Group) {\n                 default:\n                     return \"Group: enum value expected\";\n                 case 0:\n                 case 1:\n                     break;\n                 }\n             if (message.Tag != null && message.hasOwnProperty(\"Tag\"))\n                 if (!$util.isString(message.Tag))\n                     return \"Tag: string expected\";\n             if (message.Player != null && message.hasOwnProperty(\"Player\")) {\n                 var error = $root.common.PlayerBaseInfo.verify(message.Player);\n                 if (error)\n                     return \"Player.\" + error;\n             }\n             return null;\n         };\n\n         /**\n          * Creates a ReqJoinChatGroup message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {rpc.ReqJoinChatGroup} ReqJoinChatGroup\n          */\n         ReqJoinChatGroup.fromObject = function fromObject(object) {\n             if (object instanceof $root.rpc.ReqJoinChatGroup)\n                 return object;\n             var message = new $root.rpc.ReqJoinChatGroup();\n             switch (object.Group) {\n             case \"World\":\n             case 0:\n                 message.Group = 0;\n                 break;\n             case \"Club\":\n             case 1:\n                 message.Group = 1;\n                 break;\n             }\n             if (object.Tag != null)\n                 message.Tag = String(object.Tag);\n             if (object.Player != null) {\n                 if (typeof object.Player !== \"object\")\n                     throw TypeError(\".rpc.ReqJoinChatGroup.Player: object expected\");\n                 message.Player = $root.common.PlayerBaseInfo.fromObject(object.Player);\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqJoinChatGroup message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof rpc.ReqJoinChatGroup\n          * @static\n          * @param {rpc.ReqJoinChatGroup} message ReqJoinChatGroup\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqJoinChatGroup.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Group = options.enums === String ? \"World\" : 0;\n                 object.Tag = \"\";\n                 object.Player = null;\n             }\n             if (message.Group != null && message.hasOwnProperty(\"Group\"))\n                 object.Group = options.enums === String ? $root.chat.ChatGroup[message.Group] : message.Group;\n             if (message.Tag != null && message.hasOwnProperty(\"Tag\"))\n                 object.Tag = message.Tag;\n             if (message.Player != null && message.hasOwnProperty(\"Player\"))\n                 object.Player = $root.common.PlayerBaseInfo.toObject(message.Player, options);\n             return object;\n         };\n\n         /**\n          * Converts this ReqJoinChatGroup to JSON.\n          * @function toJSON\n          * @memberof rpc.ReqJoinChatGroup\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqJoinChatGroup.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqJoinChatGroup;\n     })();\n\n     rpc.RespJoinChatGroup = (function() {\n\n         /**\n          * Properties of a RespJoinChatGroup.\n          * @memberof rpc\n          * @interface IRespJoinChatGroup\n          * @property {common.ErrorCode|null} [ErrCode] RespJoinChatGroup ErrCode\n          */\n\n         /**\n          * Constructs a new RespJoinChatGroup.\n          * @memberof rpc\n          * @classdesc Represents a RespJoinChatGroup.\n          * @implements IRespJoinChatGroup\n          * @constructor\n          * @param {rpc.IRespJoinChatGroup=} [properties] Properties to set\n          */\n         function RespJoinChatGroup(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespJoinChatGroup ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof rpc.RespJoinChatGroup\n          * @instance\n          */\n         RespJoinChatGroup.prototype.ErrCode = 0;\n\n         /**\n          * Creates a new RespJoinChatGroup instance using the specified properties.\n          * @function create\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {rpc.IRespJoinChatGroup=} [properties] Properties to set\n          * @returns {rpc.RespJoinChatGroup} RespJoinChatGroup instance\n          */\n         RespJoinChatGroup.create = function create(properties) {\n             return new RespJoinChatGroup(properties);\n         };\n\n         /**\n          * Encodes the specified RespJoinChatGroup message. Does not implicitly {@link rpc.RespJoinChatGroup.verify|verify} messages.\n          * @function encode\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {rpc.IRespJoinChatGroup} message RespJoinChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespJoinChatGroup.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespJoinChatGroup message, length delimited. Does not implicitly {@link rpc.RespJoinChatGroup.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {rpc.IRespJoinChatGroup} message RespJoinChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespJoinChatGroup.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespJoinChatGroup message from the specified reader or buffer.\n          * @function decode\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {rpc.RespJoinChatGroup} RespJoinChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespJoinChatGroup.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.rpc.RespJoinChatGroup();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespJoinChatGroup message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {rpc.RespJoinChatGroup} RespJoinChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespJoinChatGroup.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespJoinChatGroup message.\n          * @function verify\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespJoinChatGroup.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             return null;\n         };\n\n         /**\n          * Creates a RespJoinChatGroup message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {rpc.RespJoinChatGroup} RespJoinChatGroup\n          */\n         RespJoinChatGroup.fromObject = function fromObject(object) {\n             if (object instanceof $root.rpc.RespJoinChatGroup)\n                 return object;\n             var message = new $root.rpc.RespJoinChatGroup();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespJoinChatGroup message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof rpc.RespJoinChatGroup\n          * @static\n          * @param {rpc.RespJoinChatGroup} message RespJoinChatGroup\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespJoinChatGroup.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults)\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             return object;\n         };\n\n         /**\n          * Converts this RespJoinChatGroup to JSON.\n          * @function toJSON\n          * @memberof rpc.RespJoinChatGroup\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespJoinChatGroup.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return RespJoinChatGroup;\n     })();\n\n     rpc.ReqLeaveChatGroup = (function() {\n\n         /**\n          * Properties of a ReqLeaveChatGroup.\n          * @memberof rpc\n          * @interface IReqLeaveChatGroup\n          * @property {chat.ChatGroup|null} [Group] ReqLeaveChatGroup Group\n          * @property {string|null} [Tag] ReqLeaveChatGroup Tag\n          * @property {string|null} [PlayerGuid] ReqLeaveChatGroup PlayerGuid\n          */\n\n         /**\n          * Constructs a new ReqLeaveChatGroup.\n          * @memberof rpc\n          * @classdesc Represents a ReqLeaveChatGroup.\n          * @implements IReqLeaveChatGroup\n          * @constructor\n          * @param {rpc.IReqLeaveChatGroup=} [properties] Properties to set\n          */\n         function ReqLeaveChatGroup(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * ReqLeaveChatGroup Group.\n          * @member {chat.ChatGroup} Group\n          * @memberof rpc.ReqLeaveChatGroup\n          * @instance\n          */\n         ReqLeaveChatGroup.prototype.Group = 0;\n\n         /**\n          * ReqLeaveChatGroup Tag.\n          * @member {string} Tag\n          * @memberof rpc.ReqLeaveChatGroup\n          * @instance\n          */\n         ReqLeaveChatGroup.prototype.Tag = \"\";\n\n         /**\n          * ReqLeaveChatGroup PlayerGuid.\n          * @member {string} PlayerGuid\n          * @memberof rpc.ReqLeaveChatGroup\n          * @instance\n          */\n         ReqLeaveChatGroup.prototype.PlayerGuid = \"\";\n\n         /**\n          * Creates a new ReqLeaveChatGroup instance using the specified properties.\n          * @function create\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {rpc.IReqLeaveChatGroup=} [properties] Properties to set\n          * @returns {rpc.ReqLeaveChatGroup} ReqLeaveChatGroup instance\n          */\n         ReqLeaveChatGroup.create = function create(properties) {\n             return new ReqLeaveChatGroup(properties);\n         };\n\n         /**\n          * Encodes the specified ReqLeaveChatGroup message. Does not implicitly {@link rpc.ReqLeaveChatGroup.verify|verify} messages.\n          * @function encode\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {rpc.IReqLeaveChatGroup} message ReqLeaveChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqLeaveChatGroup.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.Group != null && Object.hasOwnProperty.call(message, \"Group\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.Group);\n             if (message.Tag != null && Object.hasOwnProperty.call(message, \"Tag\"))\n                 writer.uint32(/* id 2, wireType 2 =*/18).string(message.Tag);\n             if (message.PlayerGuid != null && Object.hasOwnProperty.call(message, \"PlayerGuid\"))\n                 writer.uint32(/* id 3, wireType 2 =*/26).string(message.PlayerGuid);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified ReqLeaveChatGroup message, length delimited. Does not implicitly {@link rpc.ReqLeaveChatGroup.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {rpc.IReqLeaveChatGroup} message ReqLeaveChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         ReqLeaveChatGroup.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a ReqLeaveChatGroup message from the specified reader or buffer.\n          * @function decode\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {rpc.ReqLeaveChatGroup} ReqLeaveChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqLeaveChatGroup.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.rpc.ReqLeaveChatGroup();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.Group = reader.int32();\n                     break;\n                 case 2:\n                     message.Tag = reader.string();\n                     break;\n                 case 3:\n                     message.PlayerGuid = reader.string();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a ReqLeaveChatGroup message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {rpc.ReqLeaveChatGroup} ReqLeaveChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         ReqLeaveChatGroup.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a ReqLeaveChatGroup message.\n          * @function verify\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         ReqLeaveChatGroup.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.Group != null && message.hasOwnProperty(\"Group\"))\n                 switch (message.Group) {\n                 default:\n                     return \"Group: enum value expected\";\n                 case 0:\n                 case 1:\n                     break;\n                 }\n             if (message.Tag != null && message.hasOwnProperty(\"Tag\"))\n                 if (!$util.isString(message.Tag))\n                     return \"Tag: string expected\";\n             if (message.PlayerGuid != null && message.hasOwnProperty(\"PlayerGuid\"))\n                 if (!$util.isString(message.PlayerGuid))\n                     return \"PlayerGuid: string expected\";\n             return null;\n         };\n\n         /**\n          * Creates a ReqLeaveChatGroup message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {rpc.ReqLeaveChatGroup} ReqLeaveChatGroup\n          */\n         ReqLeaveChatGroup.fromObject = function fromObject(object) {\n             if (object instanceof $root.rpc.ReqLeaveChatGroup)\n                 return object;\n             var message = new $root.rpc.ReqLeaveChatGroup();\n             switch (object.Group) {\n             case \"World\":\n             case 0:\n                 message.Group = 0;\n                 break;\n             case \"Club\":\n             case 1:\n                 message.Group = 1;\n                 break;\n             }\n             if (object.Tag != null)\n                 message.Tag = String(object.Tag);\n             if (object.PlayerGuid != null)\n                 message.PlayerGuid = String(object.PlayerGuid);\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a ReqLeaveChatGroup message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof rpc.ReqLeaveChatGroup\n          * @static\n          * @param {rpc.ReqLeaveChatGroup} message ReqLeaveChatGroup\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         ReqLeaveChatGroup.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults) {\n                 object.Group = options.enums === String ? \"World\" : 0;\n                 object.Tag = \"\";\n                 object.PlayerGuid = \"\";\n             }\n             if (message.Group != null && message.hasOwnProperty(\"Group\"))\n                 object.Group = options.enums === String ? $root.chat.ChatGroup[message.Group] : message.Group;\n             if (message.Tag != null && message.hasOwnProperty(\"Tag\"))\n                 object.Tag = message.Tag;\n             if (message.PlayerGuid != null && message.hasOwnProperty(\"PlayerGuid\"))\n                 object.PlayerGuid = message.PlayerGuid;\n             return object;\n         };\n\n         /**\n          * Converts this ReqLeaveChatGroup to JSON.\n          * @function toJSON\n          * @memberof rpc.ReqLeaveChatGroup\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         ReqLeaveChatGroup.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return ReqLeaveChatGroup;\n     })();\n\n     rpc.RespLeaveChatGroup = (function() {\n\n         /**\n          * Properties of a RespLeaveChatGroup.\n          * @memberof rpc\n          * @interface IRespLeaveChatGroup\n          * @property {common.ErrorCode|null} [ErrCode] RespLeaveChatGroup ErrCode\n          */\n\n         /**\n          * Constructs a new RespLeaveChatGroup.\n          * @memberof rpc\n          * @classdesc Represents a RespLeaveChatGroup.\n          * @implements IRespLeaveChatGroup\n          * @constructor\n          * @param {rpc.IRespLeaveChatGroup=} [properties] Properties to set\n          */\n         function RespLeaveChatGroup(properties) {\n             if (properties)\n                 for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                     if (properties[keys[i]] != null)\n                         this[keys[i]] = properties[keys[i]];\n         }\n\n         /**\n          * RespLeaveChatGroup ErrCode.\n          * @member {common.ErrorCode} ErrCode\n          * @memberof rpc.RespLeaveChatGroup\n          * @instance\n          */\n         RespLeaveChatGroup.prototype.ErrCode = 0;\n\n         /**\n          * Creates a new RespLeaveChatGroup instance using the specified properties.\n          * @function create\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {rpc.IRespLeaveChatGroup=} [properties] Properties to set\n          * @returns {rpc.RespLeaveChatGroup} RespLeaveChatGroup instance\n          */\n         RespLeaveChatGroup.create = function create(properties) {\n             return new RespLeaveChatGroup(properties);\n         };\n\n         /**\n          * Encodes the specified RespLeaveChatGroup message. Does not implicitly {@link rpc.RespLeaveChatGroup.verify|verify} messages.\n          * @function encode\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {rpc.IRespLeaveChatGroup} message RespLeaveChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespLeaveChatGroup.encode = function encode(message, writer) {\n             if (!writer)\n                 writer = $Writer.create();\n             if (message.ErrCode != null && Object.hasOwnProperty.call(message, \"ErrCode\"))\n                 writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ErrCode);\n             return writer;\n         };\n\n         /**\n          * Encodes the specified RespLeaveChatGroup message, length delimited. Does not implicitly {@link rpc.RespLeaveChatGroup.verify|verify} messages.\n          * @function encodeDelimited\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {rpc.IRespLeaveChatGroup} message RespLeaveChatGroup message or plain object to encode\n          * @param {$protobuf.Writer} [writer] Writer to encode to\n          * @returns {$protobuf.Writer} Writer\n          */\n         RespLeaveChatGroup.encodeDelimited = function encodeDelimited(message, writer) {\n             return this.encode(message, writer).ldelim();\n         };\n\n         /**\n          * Decodes a RespLeaveChatGroup message from the specified reader or buffer.\n          * @function decode\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @param {number} [length] Message length if known beforehand\n          * @returns {rpc.RespLeaveChatGroup} RespLeaveChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespLeaveChatGroup.decode = function decode(reader, length) {\n             if (!(reader instanceof $Reader))\n                 reader = $Reader.create(reader);\n             var end = length === undefined ? reader.len : reader.pos + length, message = new $root.rpc.RespLeaveChatGroup();\n             while (reader.pos < end) {\n                 var tag = reader.uint32();\n                 switch (tag >>> 3) {\n                 case 1:\n                     message.ErrCode = reader.int32();\n                     break;\n                 default:\n                     reader.skipType(tag & 7);\n                     break;\n                 }\n             }\n             return message;\n         };\n\n         /**\n          * Decodes a RespLeaveChatGroup message from the specified reader or buffer, length delimited.\n          * @function decodeDelimited\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n          * @returns {rpc.RespLeaveChatGroup} RespLeaveChatGroup\n          * @throws {Error} If the payload is not a reader or valid buffer\n          * @throws {$protobuf.util.ProtocolError} If required fields are missing\n          */\n         RespLeaveChatGroup.decodeDelimited = function decodeDelimited(reader) {\n             if (!(reader instanceof $Reader))\n                 reader = new $Reader(reader);\n             return this.decode(reader, reader.uint32());\n         };\n\n         /**\n          * Verifies a RespLeaveChatGroup message.\n          * @function verify\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {Object.<string,*>} message Plain object to verify\n          * @returns {string|null} `null` if valid, otherwise the reason why it is not\n          */\n         RespLeaveChatGroup.verify = function verify(message) {\n             if (typeof message !== \"object\" || message === null)\n                 return \"object expected\";\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 switch (message.ErrCode) {\n                 default:\n                     return \"ErrCode: enum value expected\";\n                 case 0:\n                 case 1:\n                 case 2:\n                 case 3:\n                 case 4:\n                 case 5:\n                 case 6:\n                 case 7:\n                     break;\n                 }\n             return null;\n         };\n\n         /**\n          * Creates a RespLeaveChatGroup message from a plain object. Also converts values to their respective internal types.\n          * @function fromObject\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {Object.<string,*>} object Plain object\n          * @returns {rpc.RespLeaveChatGroup} RespLeaveChatGroup\n          */\n         RespLeaveChatGroup.fromObject = function fromObject(object) {\n             if (object instanceof $root.rpc.RespLeaveChatGroup)\n                 return object;\n             var message = new $root.rpc.RespLeaveChatGroup();\n             switch (object.ErrCode) {\n             case \"Default\":\n             case 0:\n                 message.ErrCode = 0;\n                 break;\n             case \"OK\":\n             case 1:\n                 message.ErrCode = 1;\n                 break;\n             case \"EntryError\":\n             case 2:\n                 message.ErrCode = 2;\n                 break;\n             case \"LoginAccountUnExistent\":\n             case 3:\n                 message.ErrCode = 3;\n                 break;\n             case \"LoginPasswordError\":\n             case 4:\n                 message.ErrCode = 4;\n                 break;\n             case \"RegisterAccountExit\":\n             case 5:\n                 message.ErrCode = 5;\n                 break;\n             case \"AuthFailed\":\n             case 6:\n                 message.ErrCode = 6;\n                 break;\n             case \"ChangePlayerInfoFailed\":\n             case 7:\n                 message.ErrCode = 7;\n                 break;\n             }\n             return message;\n         };\n\n         /**\n          * Creates a plain object from a RespLeaveChatGroup message. Also converts values to other types if specified.\n          * @function toObject\n          * @memberof rpc.RespLeaveChatGroup\n          * @static\n          * @param {rpc.RespLeaveChatGroup} message RespLeaveChatGroup\n          * @param {$protobuf.IConversionOptions} [options] Conversion options\n          * @returns {Object.<string,*>} Plain object\n          */\n         RespLeaveChatGroup.toObject = function toObject(message, options) {\n             if (!options)\n                 options = {};\n             var object = {};\n             if (options.defaults)\n                 object.ErrCode = options.enums === String ? \"Default\" : 0;\n             if (message.ErrCode != null && message.hasOwnProperty(\"ErrCode\"))\n                 object.ErrCode = options.enums === String ? $root.common.ErrorCode[message.ErrCode] : message.ErrCode;\n             return object;\n         };\n\n         /**\n          * Converts this RespLeaveChatGroup to JSON.\n          * @function toJSON\n          * @memberof rpc.RespLeaveChatGroup\n          * @instance\n          * @returns {Object.<string,*>} JSON object\n          */\n         RespLeaveChatGroup.prototype.toJSON = function toJSON() {\n             return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n         };\n\n         return RespLeaveChatGroup;\n     })();\n\n     return rpc;\n })();\n\n module.exports = $root;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'protobufjs/minimal.js': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}