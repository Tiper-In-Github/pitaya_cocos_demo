{"version":3,"sources":["file:///Users/even/workspace/github/pitaya_cocos_demo/client/assets/scripts/net/pitaya/Pitaya.ts"],"names":["PitayaWs","proto","Session","Pomelo","starx","window","protocol","Protocol","Init","host","port","url","NewWebSocket","sendHandShake","Promise","reslove","reject","_ws","WebSocket","binaryType","onclose","ev","console","log","onerror","onmessage","onMessage","onopen","dispatch","msg","type","Package","TYPE_HANDSHAKE","data","JSON","parse","strdecode","body","code","obj","encode","TYPE_HANDSHAKE_ACK","send","TYPE_HEARTBEAT","heartbeat","TYPE_DATA","onData","TYPE_KICK","onKick","msgs","decode","Array","isArray","i","length","handshakeBuffer","version","rsa","handshakePkg","strencode","stringify","pkg","buffer","Call","route","CallAuth","reqByte","lobby","ReqAuth","Token","Account","token","finish","request","cb","reqId","error","sendMessage","callbacks","set","routeMap","encodeMsg","packet","Message","TYPE_REQUEST","TYPE_NOTIFY","Map"],"mappings":"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","sourcesContent":["import proto from \"../../../../proto_js/proto.js\";\nimport { Session } from \"../../logic/login/LoginModel\";\nimport { Pomelo } from \"./Pomelo\";\n\nconst starx = (window as any).starx\nconst protocol = (window as any).Protocol\n\n\nexport class PitayaWs {\n\n    private static _ws: WebSocket;\n    private static callbacks = new Map<number, Function>();\n    private static routeMap = new Map<number, string>();\n    private static reqId: number = 0\n\n    public static async Init(host: string, port: number) {\n        let url = `ws://${host}:${port}`\n        await this.NewWebSocket(url)\n        await this.sendHandShake();\n    }\n\n    public static async NewWebSocket(url: string) {\n        return new Promise((reslove, reject) => {\n            this._ws = new WebSocket(url);\n            this._ws.binaryType = 'arraybuffer';\n            this._ws.onclose = (ev: any) => { console.log(\"websocket close\", ev) };\n            this._ws.onerror = (ev: any) => { console.log(\"websocket err\", ev) };\n            this._ws.onmessage = (ev: any) => { this.onMessage(ev) };\n            this._ws.onopen = (ev: any) => { reslove(true) };\n        })\n    }\n\n    private static onMessage(ev: any) {\n        let dispatch = (msg: { type: number, body?: Uint8Array }) => {\n            switch (msg.type) {\n                case Pomelo.Package.TYPE_HANDSHAKE:\n                    {\n                        let data = JSON.parse(protocol.strdecode(msg.body));\n                        console.log(\" handshake msg.code\", data.code)\n\n                        if (data.code === 501) {\n                            return;\n                        }\n                        if (data.code !== 200) {\n                            return;\n                        }\n                        //一定要握手回应，不然服务器会断开\n                        let obj = protocol.Package.encode(protocol.Package.TYPE_HANDSHAKE_ACK);\n                        this.send(obj);\n                    }\n                    break\n                case Pomelo.Package.TYPE_HEARTBEAT:\n                    this.heartbeat(msg.body)\n                    break\n                case Pomelo.Package.TYPE_DATA:\n                    this.onData(msg.body as ArrayBuffer)\n                    break\n                case Pomelo.Package.TYPE_KICK:\n                    this.onKick(msg.body)\n                    break\n            }\n        }\n        let msgs = protocol.Package.decode(ev.data);\n        if (Array.isArray(msgs)) {\n            for (let i = 0; i < msgs.length; i++) {\n                let msg = msgs[i];\n                dispatch(msg)\n            }\n        } else {\n            dispatch(msgs)\n        }\n    }\n\n\n    private static async sendHandShake() {\n        let handshakeBuffer = {\n            'sys': {\n                type: \"pitaya_cocos\",\n                version: \"1.0.0\",\n                rsa: {}\n            },\n            'user': {}\n        };\n        let handshakePkg = protocol.strencode(JSON.stringify(handshakeBuffer))\n        var pkg = protocol.Package.encode(protocol.Package.TYPE_HANDSHAKE, handshakePkg);\n        this._ws.send(pkg.buffer);\n    }\n\n\n\n\n    private static heartbeat(data?: ArrayBuffer) {\n\n\n    }\n\n    private static onKick(data?: ArrayBuffer) {\n\n\n    }\n\n    private static onData(data: ArrayBuffer) {\n\n    }\n\n\n    public static Call(route: string, data: any) {\n\n    }\n\n    public static CallAuth() {\n        let reqByte = proto.lobby.ReqAuth.encode({ Token: Session.Account.token }).finish()\n        this.request(\"Connector.Handler.CallAuth\", reqByte, () => { })\n    }\n\n\n\n\n    private static request(route: string, msg: any, cb: Function) {\n        if (!route) {\n            return;\n        }\n\n        this.reqId++;\n\n        console.error(\"pitaya reqid\", this.reqId);\n\n        this.sendMessage(this.reqId, route, msg);\n        this.callbacks.set(this.reqId, cb);\n        this.routeMap.set(this.reqId, route);\n    };\n\n    private static sendMessage(reqId: number, route: string, msg: any) {\n        var encodeMsg = this.encode(reqId, route, msg);\n        console.log(\" pitaya  1-2 1-2 1-2     msg \", encodeMsg)\n        var packet = protocol.Package.encode(protocol.Package.TYPE_DATA, encodeMsg);\n        console.log(\" pitaya  1-3 1-3 1-3     packet \", packet)\n        this.send(packet);\n    };\n\n    private static send(packet: any) {\n        this._ws.send(packet);\n    };\n\n    private static encode(reqId: number, route: string, msg: any) {\n        var type = reqId ? protocol.Message.TYPE_REQUEST : protocol.Message.TYPE_NOTIFY;\n        return protocol.Message.encode(reqId, type, 0, route, msg);\n    }\n}\n\n"]}