{"version":3,"sources":["file:///Users/even/workspace/github/pitaya_cocos_demo/client/assets/scripts/logic/login/LoginView.ts"],"names":["Button","Component","director","EditBox","find","_decorator","LoginController","ccclass","property","LoginView","_editBoxAccount","_editBoxPassword","_buttonRegister","_buttonLogin","onLoad","node","getComponent","start","refreshAccountAndPassword","Start","onEnable","on","buttonLoginClick","buttonRegisterClick","onDisable","off","string","localStorage","getItem","undefined","setItem","OnLogin","OnConnectorAuth","loadScene","err","scene","OnRegister"],"mappings":"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","sourcesContent":["import { Button, Component, director, EditBox, find, Label, _decorator } from \"cc\";\nimport { LoginController } from \"./LoginController\";\n\nconst { ccclass, property } = _decorator;\n\n\n/**\n * 客户端从login开始，整个客户端没用什么框架，写得比较简单\n */\n@ccclass(\"LoginView\")\nexport class LoginView extends Component {\n\n    private _editBoxAccount: EditBox \n    private _editBoxPassword: EditBox \n    private _buttonRegister: Button \n    private _buttonLogin: Button \n\n    public onLoad() {\n        this._editBoxAccount = find(\"EditBox_Account\", this.node).getComponent(EditBox);\n        this._editBoxPassword = find(\"EditBox_Password\", this.node).getComponent(EditBox);\n        this._buttonRegister = find(\"Button_Register\", this.node).getComponent(Button);\n        this._buttonLogin = find(\"Button_Login\", this.node).getComponent(Button);\n    }\n\n    public async start() {\n        this.refreshAccountAndPassword()\n        await LoginController.Start()\n\n        \n    }\n\n    public onEnable() {\n        this._buttonLogin.node.on('click', () => { this.buttonLoginClick() })\n        this._buttonRegister.node.on('click', () => this.buttonRegisterClick())\n    }\n\n    public onDisable() {\n        this._buttonLogin.node.off('click', () => { this.buttonLoginClick() })\n        this._buttonRegister.node.off('click', () => this.buttonRegisterClick())\n    }\n\n\n    private refreshAccountAndPassword() {\n        this._editBoxAccount.string = \"\"\n        this._editBoxPassword.string = \"\"\n        if (localStorage.getItem(\"account\") != undefined) {\n            this._editBoxAccount.string= localStorage.getItem(\"account\")\n        }\n        if (localStorage.getItem(\"password\") != undefined) {\n            this._editBoxPassword.string = localStorage.getItem(\"password\")\n        }\n    }\n\n\n\n    private async buttonLoginClick() {\n        localStorage.setItem(\"account\", this._editBoxAccount.string)\n        localStorage.setItem(\"password\", this._editBoxPassword.string)\n        await LoginController.OnLogin(this._editBoxAccount.string, this._editBoxPassword.string)\n        await LoginController.OnConnectorAuth()\n        director.loadScene(\"lobby\", (err, scene) => {\n            if (err != null) {\n                return\n            }\n        })\n    }\n\n    private async buttonRegisterClick() {\n        localStorage.setItem(\"account\", this._editBoxAccount.string)\n        localStorage.setItem(\"password\", this._editBoxPassword.string)\n        await LoginController.OnRegister(this._editBoxAccount.string, this._editBoxPassword.string)\n    }\n\n}"]}