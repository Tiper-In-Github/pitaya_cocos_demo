{"version":3,"sources":["file:///Users/even/workspace/github/pitaya_cocos_demo/client/assets/scripts/net/pitaya/Pitaya.ts"],"names":["PitayaWs","proto","Session","Pomelo","starx","window","protocol","Protocol","Init","host","port","handshakeBuffer","type","version","rsa","Promise","reslove","reject","_ws","WebSocket","reqId","binaryType","onclose","ev","console","log","onerror","onmessage","dispatch","msg","Package","TYPE_HANDSHAKE","handshake","body","TYPE_HEARTBEAT","heartbeat","TYPE_DATA","onData","TYPE_KICK","onKick","msgs","decode","Array","isArray","i","length","onopen","data","Call","route","CallAuth","reqByte","lobby","ReqAuth","encode","Token","Account","token","finish","testStartX","init","WsUrl","Host","Port","request","e","resp","RespAuth","cb","sendMessage","callbacks","set","routeMap","packet","send","buffer","Message","TYPE_REQUEST","TYPE_NOTIFY","Map"],"mappings":"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","sourcesContent":["import proto from \"../../../../proto_js/proto.js\";\nimport { Session } from \"../../logic/login/LoginModel\";\nimport { Pomelo } from \"./Pomelo\";\n\n\nconst starx = (window as any).starx\nconst protocol = (window as any).Protocol\nexport class PitayaWs {\n\n    private static _ws: WebSocket;\n    private static callbacks = new Map<number, Function>();\n    private static routeMap = new Map<number, string>();\n    private static reqId: number\n\n    public static async Init(host: string, port: number) {\n\n        let handshakeBuffer = {\n            'sys': {\n                type: \"pitaya_cocos\",\n                version: \"1.0.0\",\n                rsa: {}\n            },\n            'user': {}\n        };\n\n        return new Promise((reslove, reject) => {\n            this._ws = new WebSocket('ws://127.0.0.1:3250');\n            this.reqId = 0;\n            this._ws.binaryType = 'arraybuffer';\n            this._ws.onclose = (ev: Event) => {\n                console.log(\"websocket close\", ev)\n                // reject(ev)\n            };\n            this._ws.onerror = (ev: Event) => {\n                console.log(\"websocket err\", ev)\n                // reject(ev)\n            };\n            this._ws.onmessage = (ev: any) => {\n                console.log(\"websocket onmessage\", ev)\n                let dispatch = (msg: { type: number, body?: Uint8Array }) => {\n                    switch (msg.type) {\n                        case Pomelo.Package.TYPE_HANDSHAKE:\n                            this.handshake(msg.body)\n                            break\n                        case Pomelo.Package.TYPE_HEARTBEAT:\n                            this.heartbeat(msg.body)\n                            break\n                        case Pomelo.Package.TYPE_DATA:\n                            this.onData(msg.body as ArrayBuffer)\n                            break\n                        case Pomelo.Package.TYPE_KICK:\n                            this.onKick(msg.body)\n                            break\n                    }\n                }\n                let msgs = Pomelo.Package.decode(ev);\n                if (Array.isArray(msgs)) {\n                    for (let i = 0; i < msgs.length; i++) {\n                        let msg = msgs[i];\n                        dispatch(msg)\n                    }\n                    return\n                }\n                dispatch(msgs)\n            };\n\n            this._ws.onopen = (ev: Event) => {\n                // let handshakePkg = Pomelo.strencode(JSON.stringify(handshakeBuffer))\n                // var pkg = Pomelo.Package.encode(Pomelo.Package.TYPE_HANDSHAKE, handshakePkg);\n                // this._ws.send(pkg.buffer);\n\n                console.log(\"websocket open\", ev)\n                reslove(ev)\n            };\n        })\n    }\n\n    private static handshake(data?: ArrayBuffer) {\n\n    }\n\n    private static heartbeat(data?: ArrayBuffer) {\n\n\n    }\n\n    private static onKick(data?: ArrayBuffer) {\n\n\n    }\n\n    private static onData(data: ArrayBuffer) {\n        // const msg = Pomelo.Message.decode(data);\n        // if (msg.route == \"Connector.Handler.CallAuth\") {\n        //     let resp = proto.lobby.RespAuth.decode(msg.body)\n        //     console.log(\"Connector.Handler.CallAuth, resp=\", resp)\n        // }\n    }\n\n\n    public static Call(route: string, data: any) {\n        // console.log(\" pitaya call\")\n        // this.reqId++;\n        // let msg = protocol.Message.encode(this.reqId, Pomelo.Message.TYPE_REQUEST, 0, route, data);\n        // let pkg = protocol.Package.encode(Pomelo.Package.TYPE_DATA, msg)\n        // // let msg = Pomelo.Message.encode(this._reqId, Pomelo.Message.TYPE_REQUEST, 0, route, data);\n        // // let pkg = Pomelo.Package.encode(Pomelo.Package.TYPE_DATA, msg)\n        // this._ws.send(pkg.buffer);\n\n\n        // this.testStartX()\n    }\n\n    public static CallAuth() {\n        // console.log(\" pitaya call\")\n        // this.reqId++;\n\n        let reqByte = proto.lobby.ReqAuth.encode({ Token: Session.Account.token }).finish()\n\n        // let msg = protocol.Message.encode(this.reqId, Pomelo.Message.TYPE_REQUEST, 0, \"Connector.Handler.CallAuth\", reqByte);\n        // let pkg = protocol.Package.encode(Pomelo.Package.TYPE_DATA, msg)\n        // // let msg = Pomelo.Message.encode(this._reqId, Pomelo.Message.TYPE_REQUEST, 0, route, data);\n        // // let pkg = Pomelo.Package.encode(Pomelo.Package.TYPE_DATA, msg)\n        // this._ws.send(pkg.buffer);\n\n\n       \n\n        this.testStartX()\n        //  this.request(\"Connector.Handler.CallAuth\", reqByte, () => {\n\n        // })\n    }\n\n\n    private static testStartX() {\n        starx.init(\n            {\n                host: Session.WsUrl.Host,\n                port: Session.WsUrl.Port\n            },\n            () => {\n\n                starx.request(\"Connector.Handler.CallAuth\", proto.lobby.ReqAuth.encode({ Token: Session.Account.token }).finish(), (e: any) => {\n                    let resp = proto.lobby.RespAuth.decode(e);\n                    console.log(\" Connector.Handler.CallAuth, success resp= \", resp);\n                });\n            })\n    }\n\n\n    private static request(route: string, msg: any, cb: Function) {\n        if (!route) {\n            return;\n        }\n\n        this.reqId++;\n        this.sendMessage(this.reqId, route, msg);\n        this.callbacks.set(this.reqId, cb);\n        this.routeMap.set(this.reqId, route);\n    };\n\n    private static sendMessage(reqId: number, route: string, msg: any) {\n        msg = this.encode(reqId, route, msg);\n        var packet = protocol.Package.encode(protocol.Package.TYPE_DATA, msg);\n        this.send(packet);\n    };\n\n    private static send(packet: any) {\n        this._ws.send(packet.buffer);\n    };\n\n    private static encode(reqId: number, route: string, msg: any) {\n        var type = reqId ? protocol.Message.TYPE_REQUEST : protocol.Message.TYPE_NOTIFY;\n        return protocol.Message.encode(reqId, type, 0, route, msg);\n    }\n}\n\n"]}